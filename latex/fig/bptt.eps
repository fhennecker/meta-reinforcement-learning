%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 764.000000 163.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 764 163
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 764 163
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: CMUSerif-Roman
%!FontType1-1.0: CMUSerif-Roman 1.0000.0.7000
14 dict begin/FontName /CMUSerif-Roman def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /h put
dup 34 /i put
dup 35 /d put
dup 36 /e put
dup 37 /n put
dup 38 /space put
dup 39 /l put
dup 40 /a put
dup 41 /y put
dup 42 /r put
dup 43 /p put
dup 44 /u put
dup 45 /t put
dup 46 /o put
dup 47 /W put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1135 1 index div -387 2 index div 1495 3 index div 1094 5 -1 roll div]cvx def
/sfnts [<


0512172417393031373436333217353426233537111416331507350623222637141716333237363D013427262322070622855A4C321A34901A34933452567E531D28414A2C0B0B2943462B1FD75F843ED825131F0BFDA125131F0B4242845D5D2E40461114CD14113C4030000002001CFFF5019F01C0001E0029006C00B21C02002BB10E09E9B20E1C0A2BB3000E15092BB20303002BB12508E9B41F0A1C030D2BB11F08E901B02A2FB000D6B10A11E9B01F32B00A10B20020102BB1060AE9B01732B02BD6B1200A1112B2030E1C393939B00611B0133900B10A0E1112B00039B01F11B006393031373436333216151406232114171633323E023736333215140E022322263733342E0223220E021C7957585B0811FEE91E2A470A17302A0C030A0D1324462A588454ED0715312410232A1DDC5E8672520F0666304304112E240E0C09272F238582152F41290E214B00000100200000021702B60030009A00B20002002BB01933B10106E9B2181E2C323232B20A05002BB408060030042BB20F03002BB12508E901B0312FB004D6B1290AE9B00A32B229040A2BB340292C092BB204290A2BB3400401092BB00832B02910B20421102BB1150AE9B215210A2BB3401518092BB221150A2BB340211E092BB032D6B129041112B10C2F3939B02111B00F39B01512B01B3900B125011112B20B0C143939393031333532363511342623353711333E013332171E011D011E013315262322073532363D0134262322061D01141633152623222035191A3490011048384B1E160901202D660A086935191F2B34531935660A081F0D20020825131F0BFEA4243C25193848BF15091F03031F0D20E9333C5749B8200D1F0300000000020021000000F7029D0012001C006500B20002002BB10106E9B00E32B20A03002BB20903002BB10806E9B01A2FB416060013042B01B01D2FB004D6B10B0AE9B01732B20B040A2BB3400B0E092BB2040B0A2BB3400401092BB00B10B11313E9B0132FB01ED6B10B041112B211161A393939003031333532363511342623353711141633152623220334363216140623222621351919318C153166020E361F2C1F1F16171E1F0D20010D25121F0BFE911E0E1F03026514211E2E1E2000010021000000FF02B60014004B00B20002002BB10106E9B00E32B20A05002BB408060030042B01B0152FB004D6B10B0AE9B20B040A2BB3400B0E092BB2040B0A2BB3400401092BB00832B016D6B10B041112B0133900303133353236351134262335371114163315222E0123222135191A349019350C33250B0C1F0D20020825131F0BFD96200D1F020100000100200000021701BA002E009F00B20002002BB01733B10106E9B2161C2A323232B20D03002BB00A33B12308E9B20D03002BB408060030042B01B02F2FB004D6B1270AE9B40B0A

3900303113353E0237331533152311143332363D013315140623222E023511132E3D1501198F8F431D2619323112242E1D0190160241502EB81FFEEA6C3B353739365109183B2B011400000000010020FFF5021701BA0023007F00B21A02002BB01733B10808E9B21A02002BB415060030042BB20103002BB01033B10006E9B00F32B21103002BB00233B40F060030042B01B0242FB020D6B1030AE9B220030A2BB3402000092BB00310B2200B102BB01732B1120AE9B20B120A2BB3400B0F092BB025D6B10B031112B01A3900B100151112B118203939303113353711141E023332363D013426233537111416331507350623222E033D01342620930410261E36431A34931A34902A572C3C1E10021401901F0BFEB4181C200F5942B225131F0BFE9D25131F0B5A5A161C36212096441800000000010013FF3301FC01AF003100D700B22F00002BB10A08E9B20A2F0A2BB3000A03092BB22903002BB01533B12A06E9B2141A2432323201B0322FB000D6B01432B10611E9B206000A2BB340061A092BB033D6B0361AB1111087B0112EB010C0B11E1EF9B01FC0B10C208704B00C2EB020C0B12D09F9B02CC0B00C10B30D0C20132BB30E0C20132BB1111008B3100C20132BB31F0C20132BB20D0C20208A208A23060E111239B00E3900400A0E10111E1F202C2D0C0D2E2E2E2E2E2E2E2E2E2E01400A0E10111E1F202C2D0C0D2E2E2E2E2E2E2E2E2E2EB0401A01B106001112B008390030311734363332161514071633323E01373637032E01233516333237152215141713373635342735163332371522070306232226131911121827131C1E30150F0E0B960A1E292D341F4E38066F65062F42152922431AB0305026367C151617132505122C2A261E1D016D180B1F03031F1A030FFEF3F60E0A29021F03031F40FE55722F0000FFFF005F02E60129035E10070011000000FD00000001005F01E901290261000D002700B0072FB10608E9B0032F01B00E2FB000D6B40613000A042BB00FD600B103061112B009393031133436333216170726272E035F130F0A217D0B078E0C071106023C0D18134E17022C0402090D00FFFFFE6B02E6FF35035E10070010FE0C00000000000100000000B333D9B910DD5F0F3CF5001F03E800000000C65FA56100000000C65FA561FB91FE7D05D704460000000800020000000000000001000003A7FF0600C805FFFB91FE6105D700010000000000000000000000000000001302F8000A014D00000403001201F4002A022B002201BC001C022B00200115002101150021022B002001F4001C022B001C0187001C01840013022B0020020F001301F4005F01F4005F0000FE6B000000A600A60194023E02B6032803B80416045C04EA053A05BE064406A6071A07CE07D808060810000100000013009E0008009C00080002
00010000001400000100031300040004B801FF85B0018D004BB0085058B101018E59B146062B5821B010594BB014525821B080591DB0062B5C5800B0062045B0032B44B0092045B20671022BB0032B44B0082045B20951022BB0032B44B0072045B20831022BB0032B4401B00A2045B0032B44B00E2045B20A16022BB10346762B44B00D2045B20E5E022BB10346762B44B00C2045B20D45022BB10346762B44B00B2045BA000C011500022BB10346762B44B00F2045BA000A7FFF00022BB10346762B44B0102045B20F6B022BB10346762B44B0112045B21030022BB10346762B44B0122045B21122022BB10346762B44B0132045B21214022BB10346762B4459000000
00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/space 1 def
/W 2 def
/a 3 def
/d 4 def
/e 5 def
/h 6 def
/i 7 def
/l 8 def
/n 9 def
/o 10 def
/p 11 def
/r 12 def
/t 13 def
/u 14 def
/y 15 def
/grave.cap 16 def
/grave.uc 17 def
/uni0300.cap 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1135 -387 1495 1094}def
/UniqueID 4069853 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CA4055EE8746D9A2C65433B2267FD1CCC371F46876341E35392177C0263EEE28CFA476D20D38BDD67E0F74A687175FE2AE507B7E5A24573D3A365AD3CADF1CE52F9F178E91B06E77BB67DBCB6962CBE5DA4C61FF8758CDB14E1B14FA28E4212B74D089F48B4E3710E43DDFD5E10C5670C12FA62F46B9747B6D7BF86BB32AC304A9C539A2179A72266280333FFBF8998E5A9A2051CA89CEC85722EEE69D705647EEF08F96367F17FEC59D0908EF1728225756B7F853F97E15133DAD6E48C8CA1F75D4C961AE8247D95147F7D7ABB580AE030719E7563F6E11A4E2F5BB5E989F84573AFD4826A9ECD2985339A1BA00F5316BFB1106C6BF190620317490EE9EB06F230542A922452E1DE711123C4949E9D142B0270CA33EC831214F25A4EEB1A9D9327106C255BE64852317C34EC77046E9041CA37967A7AD6FFDEF4046D21324109FD86762DCDC24016D0CCC9CFA46D8FAFFB56C4F708A6075EC2C1196E32AB7B3742210D9FBD197CE93594769895A85FD2BBADD403D31A0644EA45B7CF9074E4C287A5D19B3CB69A00FE787948372F17CCEC79D01E80F59C1CB15093208D66744324BAB5293EF9E0655E7254491308B192245720064012635B9A10371CEC97E77D89EF49B435E5029C68F0A2594F492ADA28CDFF56FA4EDEEE96FF295522EBBE0C0FDD0010E9991A3410885A79BE2F10F05C4B4050904330D884692E1217CD288F938DEC5AE930F8F02939B512B12D6E32E1C6D66B49F4BCA6E2F655DFBA3B094094CC0220E732BE7432075E65C88AAD65A01395

D3D878A7A8C678B87A0E2D6D93185EBFF4B6E10A97330B65936827C98C0B015B327E17BE9DA1A496406E740BE8738ED7E3CC0136375CD8AF603C22A3B0DC01EFC466C90A32B6C5D393BDE171E8070E8B16E0F04ECF11D76310FC40571E8991DD8330452A1A25E77ACBF047E1325815D90241DF2AE6048AB0F689BDE904A21971EFBA0690DD218AE30A03E6A752FB7994BCD8F320491FAEEA9D1EA07CC68219AFA802CC29F8E2D8DD05729D6FB26BE35F98DE8F45417A687FA8F6370448CC74EF2A46EA4F4BCC66203899B1C6D598676B9E9FF12537B79C5FFC13425888712A8B389CCD43C789578FF862168388BE6875E1BBEF4BD02757D0217FDBD9D9ED450BAFEEE89CD9E8812367CE8FCEDDC954907592A9FD210C35877BABAA884D05F16785AC693589B54FB0041BBBD94C752D8D310877AD4DB674763917101227451A18302B81FBED441A35666922AC2E4AF861ABA703CDB9F000774726248E18CEF562BE635D35E57DFCDBCF8B1207662CC7BEF81D637CD6F9F867A189DB00FEBB969C5F6AF29E5582FD45630151073ED1560D11D85911BD2EFB432668132001057F924DDD85D68BAA6970F0D2CDD5FE92AC05CE1395FC7DB9B5CBBE1C6A14D551070DB581D0D9FAC11E2B7F91E50003E21BA128041E197C41D06F59D9CD92F55AA0237E009AFAE577A5D2AF8919EB63D4CF52708250F938513C307210035C843EEEACA8C94D0FA188E1F6CE7F22BC22ADD2569CCF3F6B224E75668ED3E9FAE519E6697E23095977B639A99E7042D5B21FBAE0F603CAB58E474D4B9A6BCA9B09561FF627080F344792333B48C06BE812EDBAECB612871BA349A72017EFFCE9F4B105A3A24A07023B0B4A843230F5D3BBEFC9D761F4446B6B94657F64387636153A7FF4191F0A70960D398FCD681334525A2ADB91D112AF1F74F2D4BABD198C827566EC68C1CBB475B5A35633074C452D2DB1DEA40C61CFE471227B053357BD52C3BE198644619A0CF2E3C54EBDB4424AF0C14C568038461353BD9FB396E31BF89FF028D680544351AEAD591A11F4435ACA2A8A37957F09327BEBEA3329BA4DD56A67FC9337D896C88CDDA41F4C95BEB1BAE370468FA60BE2FC02570DE9B23BF41A2022A48C11DFA510B4B52F67A77731225C0EC881FB6385B542997F70574A8CD10B864494240710D859E16B3F9018026231DAA96108DD585474DB0E1DDBE87AAAE1E55652D43490D895FE6E89170177F168E61715F7F2044FBD4C66BF44B4494AAF0C0544C9DBC440015BC24F9CA87C30BF8DDD87D9C682E012B74602F6521B2ACE55FC8145F3BAB30E6E9BC5C15D0BBBD9EF711125C9321C5A61343551D5ECD265E840B4B09EFA79631CBBFAFC86158944B8B225455DEEF7BA6864F5ADEA02AFBCBF243BF78452F5C0914E41BFE441D60CA40241C2CA0B1471B8241712187E6161C0
4C202780AABF5D5CDAB3C96983B874D71DDFFA4870B4075723246B3E28A31E161AA4D9EAA7B4379FAB7A6BA937D42DD339E35D9AC81BFB5E52D17954F053630A380A35933D39B6531792E99B17A885B2BBA87CEE6A2458842E7E062930F761B3ABC534A2A74EB13329D9F8F8ED10FEEF7B47B7661DCEB53030A160E0F32F240625A23045588CBB2DBD6732AA8F230883A3407E9406A4AEA219A1BCD963C2CCDBDBFF0F9E6F4179D6D763C886203FC18B27128DA9406949A8276263D505E5B741037D906A326B2752E42C84384C172D7B9164A8610C12B32985AE367F5653EDE260FB35F16CFF85A5ACD85CBC3537FBEE725F94369B3FA6DC8EF2692CAF9BA15E349AF248483D5C248283B65BCFB0C3250EE90A432FBB77D210E981E7759D50259C95B782241FFF5CE70A6E9B8BDCF74C5EFBEF5B46BF0796D33ACC2EC988069A4D4A3B04E61A2DFF361C70D7C9EECC6128DD888A4C0328F54B612DF9E438E18D13231081B9D15C6B71453EC38817CDC1D1210BDF95F7F4684C8AA2DE979400CA3B9C7875D51C0F5EF6C3893076EC7C97063AB5D38A4753B6BA120AA8E021867FF0BAA59F0F75B4ECD5D061EEFB32C0369D43B8597E2CC835C8AA605129212EC0E791199BA4C4483D8ABAF7D26F7EC60A36B6C2B18F726A61395F569CB4D7781766593D9A133CA432B8EA89B6E6F1CB406DA85CA0DF50264F3F49D3C5D17DFFD95BA5FD18E9F0F24A54C6B8987B226B330FB146DB421D427E403E53A5598BF83D05CC969C4FCE5EAFDE9EBAA30A687FDE1C84914C136E57DC77566B9BED966AB40A013CA51FF51FBD636AE9546E34B6F9AA511F2FB9FEDAF0262F01C14C155D6A2608EC7FBED6414228E0366BE1DBB9BCDF3C3D6581BFBBB62D3014B94A3A603534B9E929133A12851FAAD3380381AF37D26D2CBF5097AEB5D48227918E94B9677B040BF91EA626F19F9961E1D602548C91F2E965F4957B8676
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CMUSerif-Roman cguidfix
/F1.1/CMUSerif-Roman renmfont
%RBIBeginFontSubset: CMUSerif-Bold
%!FontType1-1.0: CMUSerif-Bold 1.0000.0.7000
14 dict begin/FontName /CMUSerif-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /t put
dup 34 /space put
dup 35 /equal put
dup 36 /zero put
dup 37 /one put
dup 38 /two put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1338 1 index div -401 2 index div 1738 3 index div 1115 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/equal 5 def
/t 6 def
/grave.cap 7 def
/grave.uc 8 def
/uni0300.cap 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1338 -401 1738 1115}def
/UniqueID 4025032 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CA4055EE8746D9A2C65433B36123AA97FB9892A232A53F752CE74141781D50585C0AB47D1DB70907171A8EE1A23DA2693EC1F913D84D429CB0B70A8BFF5CD84F380203D3DA156D415360E0457C0E9FC04A6AE204BE21B035EC18AD9210C080D912403B86715E2D6BAC7072D2FDBEE07512E5DA176D79F68B3EEC03C587650739C5905946417EFC768F4087D9B95CE63BBE717ED7ED19A86977AA652D1F6BE0C3E346E1E033AFF9487E0B313B111FCD430CAB8DBD6331AC73558EB9A3224532BBCE8388C6FEEB516278BAF1048AECBB91433116347C437E6A83BDE9BC92263277200EFC9A013E79426FBEFDDD0ED411E8E3D24C7E9859CE20091BC78CB39C58C6E06E88D2725C86DFA83E0445572EC4A1BF5AB73E6A126560E1E2BC4EDE2D6968E52EB8FB8A4A30001D8BE52A2FAC022C2E004D5FC407D7040B66A00C2BD9AF4AA0F7E29A08C72AA7C118C233AE05FDDF9A5C9A756B479463F8FAE4A253B40A2615D3E0161E4B7299154E0E1FCBB36DD31CD6CAC6D002D7D509395A099A2EDFBAB8DFA3E32CFE652436E32812F0A42BEECB4F1DF5E7B28321829537795831B92CFEDD87236EE491AFC7C29EF41AE44D4CAC6D1E2D6415E6F402B7CBED3386DD256907F83FCE2CF3F4B410FC75C8732AF8DBDD97EBED6DC82DC3ADD4E2B8732D3F9724B6DC504227B9D76F28D0F19EE816D385E94199E5649C5549A2065BFA955C5F783950A8052EAE8880CE775A148FC78ED6708616972783EE47EA4BC023988D07ECFD0E89F5AE2C7F5EED43216BB37684F3DF7
DB8391E67E5355B620BEB1BF0835F8708C6D13DC363475A54FDE730ABEEB9C32B2CC5909F5098BB6103143E4BC17FF660861FB19DAC4AEFAF8A2CE83E86A265A8038738B0998574634C8AF3E2FE41DC3EA78B6C1EFD3F994818232778AB56DAD88BC7BB0060EF70C94D93D98464A7DDE115D0BB9244F9F9E95F2A2A565A2307A6365D77E03087BC19E4874830B77EB5F94603679198598F5B2FB6EBD46FE0B87C336C9AB24D6B95F663EEE7A764FD5F6AB136C5A190B5CC5F9F86CF3BCF30B706EC8579CDCC830689A1BD76611489444472832DDE7F1DCE1C8D280A0C6FDC6521FA8C31727A64C615E6CD12EB0C2C087FE32B9CE17E4D6F920663A2517BB74C9789DE03FAB7F5DB53F1471D351EBE8BE3AC26112CAF2D0F3AE953BB8F42D2F96D2E053E2DF5A76A82550F511CB83B688B6AB528F63F0D5D41DC6A02C8560AFFEEFE9BDF372863A515E2905AE7D0DFF912D891751833AC8BB86D5924FA38B7A06E93373730784B8CD29BA5AB08C84F4FCB51EB9FCDE39783868BBB2D5E23A537749B25B8450D634006301212E019CFE9AF681140E5B8E514798EE40798558122D3BFB5EA53462C1ECEF9588AA4052AFF8130F90EDCEE52E06BE9C8DB3C6BC50744AB2802B50BBAF26F4E05711B03F05612F755A67CE91276F65BB102C67712915FD1D87CA28C68B4553EE912357AA0C0B667A296F6B7D6E7611A5669ACB1F4A3F049186A3D47ED22D84404DD4B79408C520D51C7B6293D25E4C3E7434179918C162BCF28790E7F7A3D16979BDF62A7A8D2599DDC1321E703C82428FD363454F447872097675EC187DB28B7D6201B7018BBF8D074A016D04C22463A6B8DACFCBB1969B9E13347CCA1569268F75B47357BBEF42B6D1D68EC656549DC1BDFBCCEFA18C4E93E202DAB132397F8D8B318804322CDC1452522B2FA13D8CD05556A934C89C9E385B92E6AA39C18042C623409BA3CE9FEB343ABC151E4F6741BCA1436E7C836CD3C59A2486FA80720A462B9E01A547059BA4FC4FC38A7F0E71C222B2B9B56CF2DF205097C06F217F6B65E37E07C96825
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CMUSerif-Bold cguidfix
/F2.1/CMUSerif-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 764 163 rc
-512.04761 831.90479 m
1305.8096 831.90479 l
1305.8096 -683.57141 l
-512.04761 -683.57141 l
h
-512.04761 831.90479 m
f
524.5 99.5 m
631.5 99.5 l
631.5 65.5 l
524.5 65.5 l
h
524.5 99.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -18 420 cm
542.5 320.5 m
649.5 320.5 l
649.5 354.5 l
542.5 354.5 l
h
542.5 320.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 578 82.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-42.855999 3.9000244 m
(!"##$%&'\(\)$*)[ 8.880000 4.432000 8.880000 8.880000 7.104000 8.880000 5.328000 4.432000 7.552000 7.984000 7.104000 0.000000 ] xS
1 0 0 -1 465 24.5 cm
-18.639999 3.9000244 m
("%+,-)[ 4.432000 8.880000 8.880000 8.880000 0.000000 ] xS
1 0 0 -1 735 112 cm
-23.528 3.9000244 m
(.,-+,-)[ 8.000000 8.880000 6.208000 8.880000 8.880000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -18 420 cm
483.07983 379 m
483.07983 367.10001 l
483.19839 354.5 l
483.19839 345.63733 l
530.10559 345.63733 l
532.10559 345.63733 l
S
0 i
CM
522.10559 74.362663 m
514.10559 77.362663 l
514.10559 71.362663 l
h
522.10559 74.362663 m
f
0 J
0 j
1 0 0 -1 -18 420 cm
540.10559 345.63733 m
532.10559 342.63733 l
532.10559 348.63733 l
h
540.10559 345.63733 m
S
1 J
1 j
0.60000002 i
635.04407 320.2984 m
635.04407 308.39841 l
662.20239 308.33334 l
714.09998 308.33334 l
S
0 i
CM
704.09998 111.66666 m
696.09998 114.66666 l
696.09998 108.66666 l
h
704.09998 111.66666 m
f
0 J
0 j
1 0 0 -1 -18 420 cm
722.09998 308.33334 m
714.09998 305.33334 l
714.09998 311.33334 l
h
722.09998 308.33334 m
S
/Cs2 SC
0 sc
1 0 0 -1 95.5 143 cm
/F2.1[ 16 0 0 -16 0 0]sf
-21.455999 3.4000244 m
(!"#"$)[ 7.152000 6.128000 14.304000 6.128000 0.000000 ] xS
1 J
1 j
[
1
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -18 420 cm
20 296.75 m
707.32404 296.75 l
S
231.07812 260 m
231.07812 414.18237 l
S
451.66406 263.31763 m
451.66406 417.5 l
S
672.25 263.31763 m
672.25 417.5 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 323.71484 143 cm
-21.455999 3.4000244 m
(!"#"%)[ 7.152000 6.128000 14.304000 6.128000 0.000000 ] xS
1 0 0 -1 544.30078 143 cm
-21.455999 3.4000244 m
(!"#"&)[ 7.152000 6.128000 14.304000 6.128000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
305 99.5 m
412 99.5 l
412 65.5 l
305 65.5 l
h
305 99.5 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -18 420 cm
323 320.5 m
430 320.5 l
430 354.5 l
323 354.5 l
h
323 320.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 358.5 82.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-42.855999 3.9000244 m
(!"##$%&'\(\)$*)[ 8.880000 4.432000 8.880000 8.880000 7.104000 8.880000 5.328000 4.432000 7.552000 7.984000 7.104000 0.000000 ] xS
1 0 0 -1 245.5 24.5 cm
-18.639999 3.9000244 m
("%+,-)[ 4.432000 8.880000 8.880000 8.880000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -18 420 cm
263.57983 379 m
263.57983 367.10001 l
263.69839 354.5 l
263.69839 345.63733 l
310.60559 345.63733 l
312.60559 345.63733 l
S
0 i
CM
302.60559 74.362663 m
294.60559 77.362663 l
294.60559 71.362663 l
h
302.60559 74.362663 m
f
0 J
0 j
1 0 0 -1 -18 420 cm
320.60559 345.63733 m
312.60559 342.63733 l
312.60559 348.63733 l
h
320.60559 345.63733 m
S
1 1 1 sc
CM
85.5 99.5 m
192.5 99.5 l
192.5 65.5 l
85.5 65.5 l
h
85.5 99.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -18 420 cm
103.5 320.5 m
210.5 320.5 l
210.5 354.5 l
103.5 354.5 l
h
103.5 320.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 139 82.5 cm
-42.855999 3.9000244 m
(!"##$%&'\(\)$*)[ 8.880000 4.432000 8.880000 8.880000 7.104000 8.880000 5.328000 4.432000 7.552000 7.984000 7.104000 0.000000 ] xS
1 0 0 -1 26 24.5 cm
-18.639999 3.9000244 m
("%+,-)[ 4.432000 8.880000 8.880000 8.880000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -18 420 cm
44.079838 379 m
44.079838 367.10001 l
44.19838 354.5 l
44.19838 345.63733 l
91.105583 345.63733 l
93.105583 345.63733 l
S
0 i
CM
83.105583 74.362663 m
75.105583 77.362663 l
75.105583 71.362663 l
h
83.105583 74.362663 m
f
0 J
0 j
1 0 0 -1 -18 420 cm
101.10558 345.63733 m
93.105583 342.63733 l
93.105583 348.63733 l
h
101.10558 345.63733 m
S
1 J
1 j
0.60000002 i
211 337.5 m
312.60001 337.5 l
S
0 i
CM
302.60001 82.500015 m
294.60001 85.500015 l
294.60001 79.500015 l
h
302.60001 82.500015 m
f
0 J
0 j
1 0 0 -1 -18 420 cm
320.60001 337.5 m
312.60001 334.5 l
312.60001 340.5 l
h
320.60001 337.5 m
S
1 J
1 j
0.60000002 i
430.5 337.5 m
532.09998 337.5 l
S
0 i
CM
522.09998 82.499985 m
514.09998 85.499985 l
514.09998 79.499985 l
h
522.09998 82.499985 m
f
0 J
0 j
1 0 0 -1 -18 420 cm
540.09998 337.5 m
532.09998 334.5 l
532.09998 340.5 l
h
540.09998 337.5 m
S
/Cs2 SC
0 sc
1 0 0 -1 264.83594 53.5 cm
-13.208 2.3000183 m
(/)s
/F1.1[ 12 0 0 -12 0 0]sf
3.224 7.3000183 m
("!)[ 3.324000 0.000000 ] xS
1 0 0 -1 485.5 53.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-13.208 2.3000183 m
(/)s
/F1.1[ 12 0 0 -12 0 0]sf
3.224 7.3000183 m
("!)[ 3.324000 0.000000 ] xS
1 0 0 -1 46.421875 53.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-13.208 2.3000183 m
(/)s
/F1.1[ 12 0 0 -12 0 0]sf
3.224 7.3000183 m
("!)[ 3.324000 0.000000 ] xS
1 0 0 -1 470.5 94 cm
/F1.1[ 16 0 0 -16 0 0]sf
-14.876 2.3000183 m
(/)s
/F1.1[ 12 0 0 -12 0 0]sf
1.556 7.3000183 m
(!!)[ 6.660000 0.000000 ] xS
1 0 0 -1 248.75 94 cm
/F1.1[ 16 0 0 -16 0 0]sf
-14.876 2.3000183 m
(/)s
/F1.1[ 12 0 0 -12 0 0]sf
1.556 7.3000183 m
(!!)[ 6.660000 0.000000 ] xS
1 0 0 -1 674.25 97 cm
/F1.1[ 16 0 0 -16 0 0]sf
-14.546 2.3000183 m
(/)s
/F1.1[ 12 0 0 -12 0 0]sf
1.886 7.3000183 m
(!.)[ 6.660000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
