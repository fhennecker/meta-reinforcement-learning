%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 690.000000 292.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 690 292
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 690 292
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: CMUSerif-Roman
%!FontType1-1.0: CMUSerif-Roman 1.0000.0.7000
14 dict begin/FontName /CMUSerif-Roman def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /g put
dup 35 /e put
dup 36 /n put
dup 37 /t put
dup 38 /B put
dup 39 /a put
dup 40 /d put
dup 41 /i put
dup 42 /r put
dup 43 /zero put
dup 44 /one put
dup 45 /two put
dup 46 /ellipsis put
dup 47 /E put
dup 48 /p put
dup 49 /s put
dup 50 /o put
dup 51 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1135 1 index div -387 2 index div 1495 3 index div 1094 5 -1 roll div]cvx def
/sfnts [<






B0032B44B0082045B20951022BB0032B44B0072045B20831022BB0032B4401B00A2045B0032B44B00E2045B20A16022BB10346762B44B00D2045B20E5E022BB10346762B44B00C2045B20D45022BB10346762B44B00B2045BA000C011500022BB10346762B44B00F2045BA000A7FFF00022BB10346762B44B0102045B20F6B022BB10346762B44B0112045B21030022BB10346762B44B0122045B21122022BB10346762B44B0132045B21214022BB10346762B4459000000
00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/zero 3 def
/one 4 def
/two 5 def
/A 6 def
/B 7 def
/E 8 def
/a 9 def
/d 10 def
/e 11 def
/g 12 def
/i 13 def
/n 14 def
/o 15 def
/p 16 def
/r 17 def
/s 18 def
/t 19 def
/ellipsis 20 def
/grave.cap 21 def
/grave.uc 22 def
/uni0300.cap 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1135 -387 1495 1094}def
/UniqueID 4069853 def
currentdict currentfile eexec

FD5553FDD09A093399535876E29A5D924EAF3C4FFC1F77AB21296D1AE15C150F9E06EF48C0E4F44334D0C31520734B4B64B6B992FC3941DBC1B7203F95B566DA1017594181395FB781B267F057576CB822EBEB7CFBDF42102F6BEBFCC9729417B4E579EF9B56CBF08424F51AC5FD315EDB85D42FEC83A7212817B8CBA6E24AFE0684F789C8ECAF44798D898E2FAD37E4538C7F4FD00C93848FFFBE4C46F415C0B2C08CC2B3B72DA89FB909E047A85C09457CD0796D050D602485158209A8B02D1DFDC868A8C30484B10C738AA2FAEDF2D7C8BDB0FA8B250DA40A05BAEA1AFFAAB1AACE0DF80C919F21906A29AF7B110B822BB1BE8F4AE43382C6802EAB2819A21244D69FF2CA61A3DBE0C30E40B65B24F3721FF48DDE2649A8EDC844FB53991D62DE422293DB0582E258CF57C9E37E0CCF64C150BF7E90F462B73F35E92BE04324D1325AB72C0050626FC78E9BEF1E88A1C8CAEA931EEC17174BEE620C63A81D9CF42F40A4F217401A4C9D656BDC333B9BC93F2BC58EECD277FE5306F5410348ADF1DBF90C7BAD9AC2B1D25396961B859622DF7E1B0DA5FB0A5C4FEF2D245924600F98FD934470879AA55F6D68B615DC9F41CA78E033B8C0C22F9CDB5A85B7BE54EFF5703B90AC36778100069091944FF41B7ECDA6536DECA9C1978F8413F488F20DEDE8B49F22DCF21E40D1443EE5A845EB0A95EEB5EED330678881AC64129C9F3125B0E5FB5B781894F3AB6CD2FA3E480480CC365631FDC3FE4DC6CB33F22653B797641C732D1271828E8B8DF4FE7E26CB05C86F54128BDAEBB27DA2A8C422255F4D8D9053A1042632673719DC6572F400DA36978829A76D919B3A3A5946038F7A23A96166D7210422B7B9314BC4D6784B26B5D819FCB5A10F6F1A5F1A0ED96A5589B1EB475D5BDFF18DD7A7C58BFE2A72AFD09026C57B0FC2259EEEC244F743ECCBCB3BC1353FEFC26AE2270FF139F7C1ED324E9E8FD6606A7C3F83224A63860F09499641E7149D7BB9EE5F9222450C552A812C32D5DAB34C22A58E3369E19161239D7ED690F319D0A4927CB67B2E47194A6C06A2C0B68767574D5E9A369B23C6CD1CA3CD11FE95B801FBA14DDC0A352F4B856CB580355B65E45BDA7D85E81FE9E6E4C7C4156A39761148390005837674D8F15C18BEEFD57C287DF377ACB79410A979086790EC2F6F6B453758A507381E62C4BFE4E2B1D7BC08DC9FD880CFEFCC8E4E51AD22211C912BE420475298C2A25B8CE50947A6E890904DF74557978A7E41BBA388A2576A6674E45E5668324E9AC16CAB5E46963C9BDD545F686C8B69728F170D7333B89895EEACD702DBAFA7B0F3FD218C309BE7CCB1093B197BBCE4844C4642DB9CC87DE92EE2793AD1F81B9A173D84E15143CAD721188BE46EDED7ACE634648A316601A3722B55E0D4DB29D216AD08485D2905B81A157DAB2561
3A1CDA8C107BD8199EE9D2163E18476C89DE38613D54B3C73DB8ABA70A66A7F08E2D8A88868216C156D49D63E93879C5997B1AD61AD1EEE8BF8A28F25510D5A5C9645AFA693FB35B24EE874A79F740652F4BE1E7562429F91F78D11141C2389BDDBDC1A00B924A3CEE6AC0271C40D757C3F44CD7B62786559ABBE77154D027592A57DC922DAB284E770CB10A25C37F388E86275A74AD738BB3D009B95E286D4D9B2037D2DACF8F78EA716BFDD88FF7324E4C16E7B07B5E87785187F8002B7EB98137E8589524212799117DCD36AA08C96DF851B7229CCF220FFE2142A5D1829BD79F5715F3EF4B0DC28EA4BDE776F7F4C0E910A00BB65DF3D4F265F1F1C19334AD201859993BB0558AFC6AEDEDADAF271A56437DBA6F6830512E40C7C0340B0D8D1D689099185013076CC3E993DCD81AE7907DAD01CEDBEB70B42960FB47BF28699B9028AF44D89FA2EEB98185E85BE845D6D1D10E2FF071080D3D04C569E3C3356CF848C78A41C4B25CD22D681ED7B9FA557F5F5DD059A8F81E908C2A07FD47D77384889928492E0BAF02A24663C9CABD291EE028C83C5749F3BC6921E5F96457C003265C2199BFA5483A994303197A73F8F47AD66BAD1C59EF77C3A87BEE6B8F1D50F6EDB5B5F95D7B65E32900F8A58E4B3B5F7D60139372514166B30FC6BBCCABEDD7F5A09FA3AFB915547EAA9FC39429AEC5E8546E3BB607EBB81DF893C9A5EBEDDAFD0021C18E6F55C763715F37156BD0CD152F818DE21842E11FC0E81F11BCCEB59D079E62978FE0838047BE32BC49DD8988BE607C42DE5F4B5263A203D22E73996715F173657F3C1F8768B8F7BFF4C62BFFF6BC48378993ED65866D07F7323B7395D88C110BDB6F47AA324C4142E7F6048902FB3932714BD6AC7ED53DCD58B998E2BA7FC5CA74CDF010EAD8D384D96C96B1DE36BF6025BCF9E3CEFC0789DBD028D0FCBA105E9DD7930E8E4A8E6B24FEDA2C8469FA66780F779B8A96335B24B7EBC4801A0D51B69613FEBEEE11A5F1CFDA72798F993807EF11C8467BBB83E30E62450CB7A55C363CEF05832CCB660B6C211D346958AC4ACF5A409CA85DFB0EBB9A82263F37366D295E6D16646164601113F3506D59296D79E08D98154E899B94DFF944BB613D1287D9F9E7F5657C77D2A46E974C70C0F1EAD2E6047A5B9818A04AF95292312F30A34D7D06917FB0AF7E1844E93720DA4619EC6CB2ED615C0F5E20632F67899645E0874B9113DB84611D59C2E07933CFF86797F1289564CEF43FD3A46A32AB1086BA0A832F009BDFA056F1FE4948112686710FAAED911FBA2E70A3879C20F5C0F97F7636A01D68ED526D3C7FFE523EA1D203B4F0845407AABC97ABA893A723DC7826D31C0EFF04C5C010E6C7851BEB74866305723CB8B763DDA414E0DEC46C4D9FC93A8D788E63AA7F9F450A4388972DF7BF70C6633E2D
AC6286D57BF3ADAFAA81218DB65C046BF4D489FC49A77423D415B91778E999FA227E4341C95B2982F9EA24A4CB6F5844E407BFAA4B9F77092606690FC16676D774BD6ED30DC96C49055451B909255241ECA3F63F08E90CCB0A4DE92F588B95D4D02B7B47F8A7E7F56A2E5365EAA101EE8C6D1FEA5AFD1C035B504603ECAF4739C23460FC1F600D7E34F2B716B897AC709192BBA8397198249E511052E1038DC3A96979E40CAC438FE0E8869AF52476257F1905B48CEDF58236B60EBAED1066FED0E8816A636DBECF1231319B5924097214975D533A4A2A7056B4950B0FCED235AA8011CF59B635C4FB0CEC13244B581E2C3C195A21C9DDBB832574B9EF02802CF26C1166B0FA2D6D7CB483EFE7D9C76B1231BECA160C3ECCD4A6A4FEF633C6108B1EACED8562E29A7DB23D491F3240CB4D7A595B6BADCAFB16DE13C22E55CF287B7D6F691E25D0BCFF04D49DD8620DCE86F2A3A315B2A53194959AE9B8250B64E31D2A4DB453D553B6B5DDF671E7A0A3E1D940EAE5146D05C92D36DD918E3834623C854965B9630A373855E4A5CBC0358178DFBA2749C6F420511227B0C125B7740DA260D823CF7686CD5CE597605854B157C91F53C66BD9349EACDEA9EC138E192971F2CCA5489D58081F50870E0EEC0E06CB8195BF468ED5102A72E03708078143E607E9641B0A93CF2B61CD63C8A00A2C39D1B1F2F282FF8A4BC2B72625FA1FBBCED879058FDBE1FB873623EDED850B52226821C71F61D2DCE90E2075F494099269B7C2CB373A6C0642DF31C69B575D86114C8771EDCA6B4EA533B3A31199940A92D2DC902EBAA80C060E30008579C1F1DAD2B05CDA538EABAF32F99F317E6B32B7010D7D65952F5C4A81697D8CAEDCF02F6AE933874C4346469FB8662C5E9E283FA4B27F2BFE5FD46F7F8723A597AC582EA0281ECFB7F2795CE06D189EFDA083F0F8F85236DD2DFDECB151E821C4CF7EC05E537B89478F94154A9FD5E8717514353BD05BD962800241A263ACD6FB329FD24048AE8463F5CA99C2D2E75F2BD28F7F72FE02F598E266008E25CB998D3EDDF4C78FD793A9C1BA3E034E2728AE9B650F6DD5A9DA511ABA99C3C75861B1ACE945F4BE41F1A1DD3A60B043CF6A7C6C5FD06CC1AE62377A6C57BD32B0BF6ED0D335998F09A14C8B2827D0D3DC32A314E689E6E63FB03676EAC830081A7A56E8732DAC1BF4D6DD9B9DBA9FF2AF0DAE95F46BAA8766CE319CBFAF2FA64C05DFFC1905FDE31AA4F91B667725955800FB3EBA55FE38C48CBCCE65D2522FF7D9390C6F5A7E13742F9004576481EF72DBF82228F3F0BD7134218D7EABF634255166924BBA02F60F3B1238D7D932BD2535626E82660FC483BAAE1B684F410526141A6EB72863406B4ECE1F882DA68DE4235707BF0E6C3482D1EF645B3AC27203AFFB9EE1836F11CA40ACE4B98B2DA920D584
B7B2EFA17C01CD18ED2E9B0894D3B7A22A32B5069D9E3DE2DBE6B67478F6BFBFD3CFF243F309ADD669404F6CC8BD086093E99285EC7CA4E8E12C6780D06E4CDF8A43FA1637B3CAA3CCF9E8B275A993E41651B28C538C9EFD777B228D9CF212BD1761E187D78B9CE0B100618B827731CF7E474A527A69E3EE3F76D5CC16E83D1192C66997CD78F4EE418BDC3F1FB9615EC7CCC31EDE3FD5CD6F382164C91C1282CA0DAB9FAD4C77F1D4192B70193DD98EA592D059C4909D90C5B6CA116378CA55FEA6EEF10AA16034BB182224F454866DD4E643EC3736FF48D5AB997B82EFC6F1A0298BE21C1A74B62A6AA7C8898DDCB3CC4B8289EAC1BF28FFC547B7666919F293A16F14AB338150727DB51C0E94FD30844274910611660BAB9413259A6343FA4E053D8093D33602996F63F315EDD7CA9E1DAA410729772D34A0DED86D077E4B4C62104BDB24AF6AA6785147C3AA4515C7321FF5BA30D1D984D4E97A9DC2D1D67E335CB9FEEB441D906FE1EA041E13484C8A74BB9605E0E7A721B10AE858AC10A86B67132E34D3BFB05094D5DDA415B0AFC4B1BE3A9781F7B2C69E485BAC08829992D5435B52643F86284D15E0FAD509C4CFAB6283292B626D3B59CCFC3EDCB3AA8FBD7651800251ED0112E9F95FABFFE8235ED1A47CAE54597A2ADF19A9813202A38AFB813AC6019530C098179B818B160682FC3061A141D28AED5D35957627F2C41D020907A8977DF237FCE99FB5ED2E249D25EFCD0705150BA57B03DBCEA614FC78DBBC7B439C01BFDC470B62D0C41E5CEA1FC352DBC25CFD9ED9CAF362D3D08D93E694F06F1773BA831A0006F42A5DAC029B1EAC06EC06596C69E3E0B62E6F5C3A566EF2B2973DAA6E04E84A3E9A652A5FA1B78616383FAE80DE0B420843FF286FC4513C4BC1AF8E58AF22C01950BEBE29E01A50258C2758F39D5123929101F3A16019E24D7912ECB743BEAC369B5BE516A51C610AD740D2A2044E53D24BB001A0C7EAD22EA75B5BC140CC536CB396CDF378EC2F51D3F0F2694CDC40EB56F33C513B202F745080C994
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CMUSerif-Roman cguidfix
/F1.1/CMUSerif-Roman renmfont
%RBIBeginFontSubset: CMUSerif-Bold
%!FontType1-1.0: CMUSerif-Bold 1.0000.0.7000
14 dict begin/FontName /CMUSerif-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /O put
dup 34 /n put
dup 35 /e put
dup 36 /space put
dup 37 /s put
dup 38 /i put
dup 39 /g put
dup 40 /l put
dup 41 /t put
dup 42 /r put
dup 43 /a put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1338 1 index div -401 2 index div 1738 3 index div 1115 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/space 1 def
/O 2 def
/a 3 def
/e 4 def
/g 5 def
/i 6 def
/l 7 def
/n 8 def
/r 9 def
/s 10 def
/t 11 def
/dotlessi 12 def
/grave.cap 13 def
/dotaccent.cap 14 def
/grave.uc 15 def
/uni0300.cap 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1338 -401 1738 1115}def
/UniqueID 4025032 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55432D4F3B2AF89AB3F665ECA680A77DC68550F721A1AC91638CE0630B3BF0E1E8E483C58480D639936DF84C2D7B3842CD20473EFF8DD97366771E579149EE58CC143A5B329EBA7102AC34DE14A0587D9F946108547E09622B0592D85011C4D7CC55037CD6068FB9AB8DEA40B85B7729C26A6636828F3C66A70BDE5126661C417E7559D8F55046A46C763FE5CFBAA95A9827539E66603B4334D8916A562EF841C03E18C81DBBDDD0FA6C9D30091D0B80C15350C4BD429B166FCEC32231AA563B6B15E79B9693410929F79BF38C74234759FB26E192DAE0DDBC99F22A2D1383D116736BDB65E306274DE38F530DBF0A3E14BDCE2311506967620B7000F633D0934CC9BF263F9FE9F848CECB6DF27DEC8AD1EBD0588DE8C76484959CEEE9A21922BA7C3025955F5FC42C108EAD40608E8FE0351679697419E9CDDF8CBE85277C7F85BB63D873FE4A2954A90FEAFE0CC1748E0827AA52048377BD130C29B30C8F64EF096785BBB1A012E50E460DF6C6D4CA718A3E1BA2720E5BFB57954D46218F22977B9C2D1F848DFD05B51B22D8F7BC2B919646EF70A489D11002F936769C13E0C57C9CF19E557A4BCDB472C446B3C9697A9DC2536637F3B2843DA4A347A3848E33F47226DDB0942B9E7A9AB75EBCDEEA04B616126B94986040D19B16848BEC68ED79588C4CD9A3F16ABBC10CDB281D17C5D363F101F82F8BA67F7FF40DEBFC499190F9E8F87F1F68CC1BE902EFA7307A1918432361E8EDDFA5F0CFEBAF5BFBD85783DAA64C49A2874B979CDCD69FED4A38F5119C990CD154DEEB3B91334E13522C01CF4
E89614B9DE7E0300A616CB99BBA59F60B98C44537D75E01ADCDAEDC6875E7BD2E05435DE26E62900201FD0ECA5786293A14D951F9D0BE861E4C15EB53208789671D1ECD10483BA48D32F25E11E09CCEE2E8159E6752ADB67D3740133884946B863400E0AD2E8C803CFC3348595AB762F5D5CD14B2DA9AC6A230960EC2F8CC9380B4A55E6879407C970B12AD1DF542BA68A5D04C9CA822F2E06716755A296E78D35B45870B981E0D764D1463FC3FBC0F7397AFD7EC7D4B31A61057872C8B732C1A571E0E2443FED3C8A996D9D656A94D67D5B44DD5BC47B857D79941221A2247457FADB9F7036331444840DF267A23869F131BA214B5B56C9D4C1F42EC29751CDB44D1125142317B5DBCA2B810F41E449977A9E13034BA2D1372F95D98D9E543821562939E1CCCF13DF0B7A92D4A52F4B9FB7F85EBFE2CB9E820204F0C53E3DCD6C5D91C25ED1B9E97AE973A9C28B1265AF12D99F38B2A16BB76901469D86E82FB5C329912D839EFC9AEE9A7EC557A633266BEB1E712F2F131090D9C404581BAADAE48B29D426E449E8C40372EF473220A1FF54A2AEFC7AE82F07F3AD26CEFC051849AA5B5491B35A63DD3FFF005BE0C4A54EB33DA2088A6297A5E8894A893ECC17FA8610C780D9A5FC8ED95411E880F8D7A41F473DE4EFE7630305D38FC48DFCFF6B77EE871B19519352CBB8B300FADCB888380C4F0F7F076BC802578CF391AD6868AFBA7538629414678CDB23D1811E45835106ED56C358FC32AEFA6E212C028E7590F991F71EE362B74E3F07603259310A6D1AC1AAECB7BC30E1C2790283706A06F8384712E9BF0675A6828E4085F81166DE56F34FB8272741E3C6E4F72B07D0B8A92601B303FD0C855228378426CE14C6BE1680DF75985D8B31C9E1DF1267CC479B48C815048CA42A6E94D67AD6F76EE959FE6DF5B721F8F4BE0598A66005A5589F512D7E6674FE8FAB0B6A5E99FE638F5BF3EF6620B7F0EAF8B33E937E54AEE0F2B11D321C424F0E5A1903E8D5C262169B5AB57D295394B4D25928FE6B9BDA32E3E548FC723BACB30E3C29C56C8BAE4D316E570976FCE5F737077EE37EE844447D672769073390D3F9D3AD648DC81117B0D8F5C5B74912683B3134CF33FFD11CBFAFDFBB26880A2FC706700E69883A0BA1610B5AC3BD5448F366F4783161FC6D3C52633D9069358B13B4214B5FEF9473F32D85A985F322D46B75EA08B12C970A12F1F58304E2E8E74617D6DA612554CACEF47C18173822D2475760DE25B47357D6E5C417F795235ADD0C5517D3D79B46EC8701F56B0949BCA6AA59E27ED98F9687DA3BAB469B0BFD16BA58F2F48078BE35E8CF51A521C02CD526461B3EDB5A05897216232E0758B41B1776D67A82595757E8291257C4AE243058B2360DAEA0F3484F04F8B449C9475E2B2BCD06291349DDADE5985837DF63ABA807339EC2
683B4A82C37D487BA82ACDF8AD1D938FAE29116DE3C0862771F6A0C384C7D4FD615A1110C98D9E32A6639D5765F91676FEE4529EF83E836FED147EE01C724A53A2FC0739776D2E2F0602A59A6697FE1D365D5646FF0ED85A9736E888C31ECD1B436A5067961E4D52970A090C92E0384E953C92C0035FE3929542D3D5DB58197AE0EFCB5B8AF1C6C0EA50C906DC4544D76CA4FF83D9D27CEE6056781C177DDD599D80298D78B29C02BEEB9DDB7408CAB21D91CB983BD4FE9918BAB3BA4B9BC92EBD1BFABE4939B3E81AE8337BCA0E42D5F226583A9CCA4DA4170CD3D476D65FC87EEC2E78B1913B870A1B749A08C2B92746E84EEFB33EA388CBC75DE3B60686339D5E6C18246133F7CCE85CAB26567B03C558F7729F939AE36959AB107C5CB9559CB721E6EE5D8648351EBD67B30EE218F84F6F9913FD92B9B9F93E9A3B39D7C9CA1398701ACCC6C3157E921D0E54B1C2FAAC6F19A55EC5D1E2F8A8FAF3B28291243A35296C6C8CDC890A8736D7E74DCC114D70C0D0E15D7D265EFFCE3C5AD703FBD39EAC6000100B3F5DF4AEA37EAC9F653E1C7BFA7014E549F436C72D9F441E3DAA18D492B24411661542711D05AE3E57D94F61CE4555F1B72C7F58D648CFB86E0B4108C2430D30681349CE914EEE19F6F72749E5C9198EAE9403FFAB630D979D1BCF05F04C5B96E4C33D92AD364D52C33B82E39D5F8FB9280D6BE601DE5808DE39AE4B292FB7040C8A123F2B68FBE46C206D24ED2263E211CEF93DACB5206C0AB90E592EE798B86BA93767DCB31F7F890B78C62792DC79B511DD0323282879E3F96C1DF874E121930EA0EB768E37C41BA920AACEA39C5EBC535358C5E7793969197CE06449B7A725C92C2CC3200499A715DF6A5902254A1924DC9F45DAA750EB99722D25A9D53E7066164AEF4923264243F22AD96B8224CD5AFA8D8BD3E8F2A746F0BC76AE21EAFA3472441AD565EF811CBCEB611A5342802DF3A0DC94F0433A0BAE340B06BB2EE8B9650A3151645A1533F54F2859E854F4893CDD327454CD6319D43ADB52A45CC5FCADE3441DBB3256EA7FA25228C1893D0514B9F4AF1FFC16AAC382F4FEE324953574DB0CDE0EA944FAA0A1058E0A78D98A68BAE7278C8DC750C62DF0C3B1FE8AF4B9D7098C0EBD107E6C9E3BA4B7D20741D1D83A8D1183A8F55EF194C291584BD33A5CF75E5C8311EE1059BD0F0838A8C8C957814BD341B971F0EAC0CF8C3B918121D1269217F5ACB6C7B15FB4D997D8F86C618DFA762AF8AE8E681FDBF9E0C598E6AC18AABE154F47629F6C2219342DAD4B70C1264C2DAFE9D30FD072CD50BA03509BD334E4F3B1635A92AB5170BE70DC7CC52563C164BEBA44B53EEF52E6642DDED0BA909EA10EA35DD4273B88DACD58BF6A6B2D87A9FA40F321056B565D802D466F59080802C9F67679BA967AEBB02D429DA5735B54
7E785FAFC27FF8FC13EDAE9A5C6FFF864FC6D4D93A2F9F39FE9034E51B29BD2C906F70E52E918657DADAEC832119257A6F144C01FD7BF814C3535C947ABF5FF856DB6B0A636B78FA8723F21DF053A6A9BFC7114F67C44DC61971CEBD26B4A3A5A7D20A74D48A7A2A286F64FE4B19E00B6E99DEDB77240B3524C73DB21C31CCDEFAFEF68F54784D18A24EA746C943DBE271A9131DDF58
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CMUSerif-Bold cguidfix
/F2.1/CMUSerif-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 690 292 rc
-1920.1978 2187.1538 m
3032.5493 2187.1538 l
3032.5493 -1438.1208 l
-1920.1978 -1438.1208 l
h
-1920.1978 2187.1538 m
f
1 291.5 m
689 291.5 l
689 1 l
1 1 l
h
1 291.5 m
f
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
219 649.5 m
907 649.5 l
907 940 l
219 940 l
h
219 649.5 m
S
0 i
1 1 1 sc
CM
44.88995 110 m
108.88995 110 l
114.4128 110 118.88995 105.52285 118.88995 100 c
118.88995 87 l
118.88995 81.47715 114.4128 77 108.88995 77 c
44.88995 77 l
39.3671 77 34.88995 81.47715 34.88995 87 c
34.88995 100 l
34.88995 105.52285 39.3671 110 44.88995 110 c
h
44.88995 110 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
262.88995 831 m
326.88995 831 l
332.41278 831 336.88995 835.47717 336.88995 841 c
336.88995 854 l
336.88995 859.52283 332.41278 864 326.88995 864 c
262.88995 864 l
257.3671 864 252.88995 859.52283 252.88995 854 c
252.88995 841 l
252.88995 835.47717 257.3671 831 262.88995 831 c
h
262.88995 831 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 76.889946 93.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-20.872 3.9000244 m
(!"#$%)[ 12.000000 8.000000 7.104000 8.432000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
95.889946 198 m
159.88995 198 l
165.4128 198 169.88995 193.52284 169.88995 188 c
169.88995 175 l
169.88995 169.47716 165.4128 165 159.88995 165 c
95.889946 165 l
90.367104 165 85.889946 169.47716 85.889946 175 c
85.889946 188 l
85.889946 193.52284 90.367104 198 95.889946 198 c
h
95.889946 198 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
313.88995 743 m
377.88995 743 l
383.41278 743 387.88995 747.47717 387.88995 753 c
387.88995 766 l
387.88995 771.52283 383.41278 776 377.88995 776 c
313.88995 776 l
308.3671 776 303.88995 771.52283 303.88995 766 c
303.88995 753 l
303.88995 747.47717 308.3671 743 313.88995 743 c
h
313.88995 743 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 127.88995 181.5 cm
-23.864 3.9000244 m
(&'$\(\)%)[ 11.328000 8.000000 8.880000 8.880000 4.432000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -218 941 cm
304.70319 830.56738 m
333.46942 780.93164 l
S
0 i
CM
117.47513 163.52916 m
114.17162 160.8205 l
116.76723 159.31621 l
h
117.47513 163.52916 m
f
0 J
0 j
1 0 0 -1 -218 941 cm
335.47513 777.47083 m
332.17163 780.1795 l
334.76724 781.68378 l
h
335.47513 777.47083 m
S
1 1 1 sc
CM
92.178482 151.90953 m
110.17848 151.90953 l
110.17848 118.90952 l
92.178482 118.90952 l
h
92.178482 151.90953 m
f
/Cs2 SC
0 sc
1 0 0 -1 101.17848 135.40953 cm
-4 3.9000244 m
(')s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -218 941 cm
357.71182 742.59021 m
373.03549 720.67157 l
S
0 i
CM
157.32739 223.60672 m
153.80614 221.1879 l
156.26485 219.46898 l
h
157.32739 223.60672 m
f
0 J
0 j
1 0 0 -1 -218 941 cm
375.32739 717.39325 m
371.80612 719.81207 l
374.26486 721.53101 l
h
375.32739 717.39325 m
S
1 1 1 sc
CM
153.88995 251 m
180.88995 251 l
180.88995 225 l
153.88995 225 l
h
153.88995 251 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
371.88995 690 m
398.88995 690 l
398.88995 716 l
371.88995 716 l
h
371.88995 690 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 167.38995 238 cm
-5.6279998 3.0000153 m
(*)s
/F1.1[ 10 0 0 -10 0 0]sf
0.62800002 7.0000153 m
(+)s
/Cs1 SC
1 1 1 sc
CM
204.88995 110 m
268.88995 110 l
274.41278 110 278.88995 105.52285 278.88995 100 c
278.88995 87 l
278.88995 81.47715 274.41278 77 268.88995 77 c
204.88995 77 l
199.3671 77 194.88995 81.47715 194.88995 87 c
194.88995 100 l
194.88995 105.52285 199.3671 110 204.88995 110 c
h
204.88995 110 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
422.88995 831 m
486.88995 831 l
492.41278 831 496.88995 835.47717 496.88995 841 c
496.88995 854 l
496.88995 859.52283 492.41278 864 486.88995 864 c
422.88995 864 l
417.3671 864 412.88995 859.52283 412.88995 854 c
412.88995 841 l
412.88995 835.47717 417.3671 831 422.88995 831 c
h
422.88995 831 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 236.88995 93.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-20.872 3.9000244 m
(!"#$%)[ 12.000000 8.000000 7.104000 8.432000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
255.88995 198 m
319.88995 198 l
325.41278 198 329.88995 193.52284 329.88995 188 c
329.88995 175 l
329.88995 169.47716 325.41278 165 319.88995 165 c
255.88995 165 l
250.3671 165 245.88995 169.47716 245.88995 175 c
245.88995 188 l
245.88995 193.52284 250.3671 198 255.88995 198 c
h
255.88995 198 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
473.88995 743 m
537.88995 743 l
543.41278 743 547.88995 747.47717 547.88995 753 c
547.88995 766 l
547.88995 771.52283 543.41278 776 537.88995 776 c
473.88995 776 l
468.3671 776 463.88995 771.52283 463.88995 766 c
463.88995 753 l
463.88995 747.47717 468.3671 743 473.88995 743 c
h
473.88995 743 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 287.88995 181.5 cm
-23.864 3.9000244 m
(&'$\(\)%)[ 11.328000 8.000000 8.880000 8.880000 4.432000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -218 941 cm
464.70306 830.56738 m
493.46899 780.93164 l
S
0 i
CM
277.47467 163.52916 m
274.1712 160.82048 l
276.76682 159.31621 l
h
277.47467 163.52916 m
f
0 J
0 j
1 0 0 -1 -218 941 cm
495.47467 777.47083 m
492.1712 780.1795 l
494.76682 781.68378 l
h
495.47467 777.47083 m
S
1 1 1 sc
CM
252.17821 151.90953 m
270.17822 151.90953 l
270.17822 118.90952 l
252.17821 118.90952 l
h
252.17821 151.90953 m
f
/Cs2 SC
0 sc
1 0 0 -1 261.17822 135.40953 cm
-4 3.9000244 m
(')s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -218 941 cm
517.71185 742.59021 m
533.03552 720.67157 l
S
0 i
CM
317.32739 223.60672 m
313.80612 221.1879 l
316.26486 219.46898 l
h
317.32739 223.60672 m
f
0 J
0 j
1 0 0 -1 -218 941 cm
535.32739 717.39325 m
531.80615 719.81207 l
534.26483 721.53101 l
h
535.32739 717.39325 m
S
1 1 1 sc
CM
313.88995 251 m
340.88995 251 l
340.88995 225 l
313.88995 225 l
h
313.88995 251 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
531.88995 690 m
558.88995 690 l
558.88995 716 l
531.88995 716 l
h
531.88995 690 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 327.38995 238 cm
-5.6279998 3.0000153 m
(*)s
/F1.1[ 10 0 0 -10 0 0]sf
0.62800002 7.0000153 m
(,)s
/Cs1 SC
1 1 1 sc
CM
364.88995 109 m
428.88995 109 l
434.41278 109 438.88995 104.52285 438.88995 99 c
438.88995 86 l
438.88995 80.47715 434.41278 76 428.88995 76 c
364.88995 76 l
359.3671 76 354.88995 80.47715 354.88995 86 c
354.88995 99 l
354.88995 104.52285 359.3671 109 364.88995 109 c
h
364.88995 109 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
582.88995 832 m
646.88995 832 l
652.41278 832 656.88995 836.47717 656.88995 842 c
656.88995 855 l
656.88995 860.52283 652.41278 865 646.88995 865 c
582.88995 865 l
577.36713 865 572.88995 860.52283 572.88995 855 c
572.88995 842 l
572.88995 836.47717 577.36713 832 582.88995 832 c
h
582.88995 832 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 396.88995 92.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-20.872 3.9000244 m
(!"#$%)[ 12.000000 8.000000 7.104000 8.432000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
415.88995 197 m
479.88995 197 l
485.41278 197 489.88995 192.52284 489.88995 187 c
489.88995 174 l
489.88995 168.47716 485.41278 164 479.88995 164 c
415.88995 164 l
410.3671 164 405.88995 168.47716 405.88995 174 c
405.88995 187 l
405.88995 192.52284 410.3671 197 415.88995 197 c
h
415.88995 197 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
633.88995 744 m
697.88995 744 l
703.41278 744 707.88995 748.47717 707.88995 754 c
707.88995 767 l
707.88995 772.52283 703.41278 777 697.88995 777 c
633.88995 777 l
628.36713 777 623.88995 772.52283 623.88995 767 c
623.88995 754 l
623.88995 748.47717 628.36713 744 633.88995 744 c
h
633.88995 744 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 447.88995 180.5 cm
-23.864 3.9000244 m
(&'$\(\)%)[ 11.328000 8.000000 8.880000 8.880000 4.432000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -218 941 cm
624.703 831.56738 m
653.46869 781.93164 l
S
0 i
CM
437.47433 162.52916 m
434.17087 159.82047 l
436.76648 158.31621 l
h
437.47433 162.52916 m
f
0 J
0 j
1 0 0 -1 -218 941 cm
655.4743 778.47083 m
652.17084 781.17957 l
654.76648 782.68378 l
h
655.4743 778.47083 m
S
1 1 1 sc
CM
412.17801 150.90953 m
430.17801 150.90953 l
430.17801 117.90953 l
412.17801 117.90953 l
h
412.17801 150.90953 m
f
/Cs2 SC
0 sc
1 0 0 -1 421.17801 134.40953 cm
-4 3.9000244 m
(')s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -218 941 cm
677.71185 743.59021 m
693.03552 721.67157 l
S
0 i
CM
477.32739 222.60672 m
473.80612 220.1879 l
476.26486 218.46898 l
h
477.32739 222.60672 m
f
0 J
0 j
1 0 0 -1 -218 941 cm
695.32739 718.39325 m
691.80615 720.81207 l
694.26483 722.53101 l
h
695.32739 718.39325 m
S
1 1 1 sc
CM
473.88995 250 m
500.88995 250 l
500.88995 224 l
473.88995 224 l
h
473.88995 250 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -218 941 cm
691.88995 691 m
718.88995 691 l
718.88995 717 l
691.88995 717 l
h
691.88995 691 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 487.38995 237 cm
-5.6279998 3.0000153 m
(*)s
/F1.1[ 10 0 0 -10 0 0]sf
0.62800002 7.0000153 m
(-)s
1 0 0 -1 590 44.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.6719999 3.9000244 m
(.)s
1 0 0 -1 104.5 33.5 cm
-34.127998 3.9000244 m
(/0\)12\(#3+)[ 10.880000 8.880000 4.432000 6.304000 8.448000 8.880000 7.104000 5.328000 0.000000 ] xS
1 0 0 -1 268.5 33.5 cm
-34.127998 3.9000244 m
(/0\)12\(#3,)[ 10.880000 8.880000 4.432000 6.304000 8.448000 8.880000 7.104000 5.328000 0.000000 ] xS
1 0 0 -1 425.5 33.5 cm
-34.127998 3.9000244 m
(/0\)12\(#3-)[ 10.880000 8.880000 4.432000 6.304000 8.448000 8.880000 7.104000 5.328000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -218 941 cm
252.88995 880 m
252.88995 882.99329 l
252.88995 885.7547 255.12852 887.99329 257.88995 887.99329 c
257.89218 887.99329 257.89441 887.99329 257.89664 887.99329 c
318.52048 887.91217 l
319.84888 887.9104 321.12338 888.43732 322.06271 889.37665 c
324.44891 891.76282 l
324.54465 891.85858 324.66562 891.92511 324.79773 891.95471 c
324.79773 891.95471 l
324.92245 891.9826 325.05246 891.94031 325.13684 891.8443 c
327.09949 889.61139 l
328.05026 888.52966 329.4213 887.91046 330.86145 887.91229 c
393.88351 887.99353 l
396.64493 887.99713 398.88638 885.76141 398.88995 883 c
398.88995 882.99786 398.88995 882.99573 398.88995 882.99353 c
398.88995 880 l
S
414 880 m
414 882.99329 l
414 885.7547 416.23859 887.99329 419 887.99329 c
419.00223 887.99329 419.00446 887.99329 419.00668 887.99329 c
479.63052 887.91217 l
480.95892 887.9104 482.23343 888.43732 483.17276 889.37665 c
485.55896 891.76282 l
485.65469 891.85858 485.77567 891.92511 485.90778 891.95471 c
485.90778 891.95471 l
486.0325 891.9826 486.16251 891.94031 486.24689 891.8443 c
488.20953 889.61139 l
489.16031 888.52966 490.53134 887.91046 491.9715 887.91229 c
554.99353 887.99353 l
557.755 887.99713 559.99646 885.76141 560 883 c
560 882.99786 560 882.99573 560 882.99353 c
560 880 l
S
574 880 m
574 882.99329 l
574 885.7547 576.23859 887.99329 579 887.99329 c
579.00226 887.99329 579.00446 887.99329 579.00671 887.99329 c
639.63055 887.91217 l
640.95892 887.9104 642.23346 888.43732 643.17273 889.37665 c
645.55896 891.76282 l
645.65466 891.85858 645.7757 891.92511 645.90778 891.95471 c
645.90778 891.95471 l
646.03247 891.9826 646.16254 891.94031 646.24689 891.8443 c
648.20953 889.61139 l
649.16034 888.52966 650.53137 887.91046 651.9715 887.91229 c
714.99353 887.99353 l
717.755 887.99713 719.99646 885.76141 720 883 c
720 882.99786 720 882.99573 720 882.99353 c
720 880 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 590 161.5 cm
-6.6719999 3.9000244 m
(.)s
1 0 0 -1 74 270 cm
/F2.1[ 16 0 0 -16 0 0]sf
-61.936001 3.4000244 m
(!"#$%&"'\(#$\)*&+\()[ 13.808000 10.208000 8.432000 6.128000 7.248000 5.104000 10.208000 9.200000 5.104000 8.432000 6.128000 7.152000 7.568000 5.104000 8.944000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
