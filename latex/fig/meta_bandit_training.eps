%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1017.000000 289.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1017 289
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1017 289
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: CMUSerif-Roman
%!FontType1-1.0: CMUSerif-Roman 1.0000.0.7000
14 dict begin/FontName /CMUSerif-Roman def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /g put
dup 35 /e put
dup 36 /n put
dup 37 /t put
dup 38 /B put
dup 39 /a put
dup 40 /d put
dup 41 /i put
dup 42 /space put
dup 43 /one put
dup 44 /r put
dup 45 /zero put
dup 46 /two put
dup 47 /ellipsis put
dup 48 /E put
dup 49 /p put
dup 50 /s put
dup 51 /o put
dup 52 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1135 1 index div -387 2 index div 1495 3 index div 1094 5 -1 roll div]cvx def
/sfnts [<



E901B0282FB000D6B11711E9B01710B20012102BB1051F3232B10C0AE9B20C120A2BB3400C10092BB2120C0A2BB3401209092BB029D6B112171112B10314393900B1240F1112B3000512172417393031373436333217353426233537111416331507350623222637141716333237363D013427262322070622855A4C321A34901A34933452567E531D28414A2C0B0B2943462B1FD75F843ED825131F0BFDA125131F0B4242845D5D2E40461114CD14113C4030000002001CFFF5019F01C0001E0029006C00B21C02002BB10E09E9B20E1C0A2BB3000E15092BB20303002BB12508E9B41F0A1C030D2BB11F08E901B02A2FB000D6B10A11E9B01F32B00A10B20020102BB1060AE9B01732B02BD6B1200A1112B2030E1C393939B00611B0133900B10A0E1112B00039B01F11B006393031373436333216151406232114171633323E023736333215140E022322263733342E0223220E021C7957585B0811FEE91E2A470A17302A0C030A0D1324462A588454ED0715312410232A1DDC5E8672520F0666304304112E240E0C09272F238582152F41290E214B000003001CFF3201E501C500370046005200EE00B23500002BB13B08E9B20C03002BB14F08E9B21D03002BB11008E9B21D100A2BB3001D16092BB4442A350C0D2BB444060022042BB44923350C0D2BB14908E901B0532FB009D6B14710E9B3384709082BB4000E0027042BB0002FB4380E0027042BB3054709082BB1270DE9B04710B2094D102BB12110E9B02110B24D3E102BB4320E0027042BB01920D611B4130A0032042BB054D6B147271112B2072503393939B04D11B5230C353B442C241739B02112B10E1F3939B132191112B310161B1D24173900B1443B1112B132003939B02A11B00339B02312B105273939B14F491112B507090E1F21252417393031173436372635343726353436333217363332161514062322263534372623220716140623222706151416171633321E01171615140623222637141633323635342E022B010E011314333237363534232207061C312B2C1F2F5E443C2E303A1A19130A0C111003073129295E44382B111E170744282C3F1941835B5C8134614948612246312D3B223037572C1B10572C1B104F20380C1C3D2F2427403B57242F20110F0F100D150601272676571F141B19270301020D0D244E39484936293F3E2A1E260F03023201547B281B397B281B00000100200000021702B60030009A00B20002002BB01933B10106E9B2181E2C323232B20A05002BB408060030042BB20F03002BB12508E901B0312FB004D6B1290AE9B00A32B229040A2BB340292C092BB204290A2BB3400401092BB00832B02910B20421102BB1150AE9B215210A2BB3401518092BB221150A2BB340211E092BB032D6B129041112B10C2F3939B02111B00F39B01512B01B

103D755854752A260001001C0000016C01BA002B009100B20002002BB10106E9B02432B20E03002BB00A33B11D08E9B20E03002BB408060030042BB21D0E0A2BB3401D14092B01B02C2FB004D6B1210AE9B00B32B221040A2BB3402125092BB204210A2BB3400401092BB00832B02110B20417102BB11111E9B02DD6B121041112B10A283939B111171112B20E1B1D39393900B108011112B20B1117393939B01D11B01B3930313335323635113426233537153E0133321615140623222635343E0137262322061D0114163B01152623220E011C35191A348B0E3C31202A1B1012190B09030209373F18341528570C26321F0D20010C25131F0B6E2B432419161617140C130701016E4E9A1D121F03010200000000010021FFF5016801C00044009B00B23902002BB04233B10B08E9B20B390A2BB3400B05092BB21703002BB01D33B429080031042BB229170A2BB3402925092B01B0452FB015D6B00032B42C0E002A042BB1080BE9B02C10B2150E102BB02732B4360E002A042BB1230BE9B046D6B108151112B04239B02C11B1093F3939B00E12B710110B1B1733393B241739B02311B01D3900B10B391112B03F39B02911B31519363B24173930313735343E01333216171E013332363534272E01272634363332173637363332161D01140E012322272623220615141E03171617161514062322270E030706232226210106060705020F413B3839683C32162B4C5438260B060D0708030106060B01086D3B35101527181750222A5051412D0609030101140508030D840B0806060B4549322949130C10122364491C09070C0A0E650B080509792D1F111A0F0E05050F212A353B502B060A040201140A00010013FFF5014C0267001C006E00B21602002BB10D09E9B20703002BB10A06E9B00032B00A10B10108E9B3121607082BB0062F01B01D2FB01BD6B10B0AE9B00632B21B0B0A2BB3401B00092BB00B10B1050BE9B0052FB20B050A2BB3400B09092BB00B10B21B10102BB1130BE9B01ED6B1100B1112B0163900303113353E0237331533152311143332363D013315140623222E023511132E3D1501198F8F431D2619323112242E1D0190160241502EB81FFEEA6C3B353739365109183B2B0114000000FFFF0055000002EA0069102600020000102700020116000010070002022C0000FFFF005F02E60129035E10070017000000FD00000001005F01E901290261000D002700B0072FB10608E9B0032F01B00E2FB000D6B40613000A042BB00FD600B103061112B009393031133436333216170726272E035F130F0A217D0B078E0C071106023C0D18134E17022C0402090D00FFFFFE6B02E6FF35035E10070016FE0C00000000000100000000B333D9B910DD5F0F3CF5001F03E800000000C65FA56100000000C65FA561FB91FE7D05D70446

00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/zero 3 def
/one 4 def
/two 5 def
/A 6 def
/B 7 def
/E 8 def
/a 9 def
/d 10 def
/e 11 def
/g 12 def
/h 13 def
/i 14 def
/n 15 def
/o 16 def
/p 17 def
/r 18 def
/s 19 def
/t 20 def
/ellipsis 21 def
/grave.cap 22 def
/grave.uc 23 def
/uni0300.cap 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1135 -387 1495 1094}def
/UniqueID 4069853 def
currentdict currentfile eexec


D7C45433A2A92386CF2083B0E5293739F8CD5F93C8E4C27A1BF68B73BA0BA4C394E6A0F1992461EA6FC8077B55CF9A84B0B37D65A4863A3DE3FE9522E9AEF955FA0565A758C5BFB2B62ECA58C2AE1008CB36F0169E4466C2D3A7D3ACBAF9AA79146C587D79515BF41E523439AD730485A93BC2AD69E362D3D6D4D8996998907ED4162256DD3D3457AC8F51313F0F52E522CD096BB42AB57B853FF56F1CABB4156630598DAB2F8A6FA926FEB6999938FDB9A7D786F00D80530F6A44662977D9830F1D4E547A5D5C3888B9862EBE59AEF4EAB88695F333C64FFB85BF2AD20A2926A7EA66113D1B23445647CCD5E217067F3D9C9CE373F3D7802FB575122055C79DBE2142D4DE851CF5F49523A7F3C7F172531FFFF1B44B2C8DF470AE69141A282CC76E5371DA0383C4F7FBDD05608FD0F8B07F9D23C5E852D09CB66CCC6BB51EF6E9B6F0471141E76BEC0FFAF4CBC940ECA66892CEC610E9B1CE7D1F42E49118CD9446157906FFF8A0CFDC6D32140D9FFC50D42D72EBE0B8386BA6321195E17286F090AC0555798A073DC8852F4E0543F6AC285E71644B3B6B8429C1AFDB75EB7CE8F39B5C35E7BCC7A2933ACB05D9109082C37EF78E1A4AA3476070705B5625CFC3E4F3C5A75E9428CCF6EC24CC32453D60887CC112637BBB5BEF4604D109E6DA2731DB603C2F64A98903CBC53A068E6D4176152D4608392312DC1D6C71222AC3E6E38AAED3228EB6D6216FBE38220351A74488BF429C2A18687CA93175BDCBDB46A39B77109B522593E3DE34F009AE16CE1E690ACD400203CE95BE8E125127A069BA1D4117B1FC497042281ADC5DF8322CA4ED8C7F093A14A8A818F9B45013823C544589856D1B76012A2490A2E7051A4AD377D17851E854BD5507F77E547F720118617D502823C88C9C075563132890A132EABBF2EB2686577F13FB615F55A87542D145068C14EE0FB5A1C2E5328DF60C73EA6371004FFCD25E94C139B5DF612337C7F0AE0B589DE803224B52BF5156925FDB8EAF3D730CF122DA22C4A5A031E470D408AF356493EC4779BA7F44353CD0F00ACA248961F9C8AFDC90CD7FD9B241F66349E449F6139CCCC6ACE8DADC0BBE3E6E98AB814F9C213FF38F4AF534C2FF1406ABD11EE016622969026A3F629DCAF5BA546B65375162DE2065B813D57A645FD467BBA897DCC9471CB9F101FBA5180867384592752E3D884A5551A017DEBDAA39608A9AAD348544A291972FC0D6AFBA49DE5978E8892444E9204160D81E1A9D08B65C50A4CC4FA367F4C19AFBED26C0A9AB493914AED96561001BFB00A909CAE340B5348704579A31F4D232FEC0F32D68BAC96842C6598EF1B1D2095DF23524C6411CAF1052E8A35685B8D6B5F8A2E8F65595798BAB6175BFFD90296001C1FC616A292D2E1CB6F85956B048103D9F288DB3F633CC32DEEA4B24742C52EE

71D741339B4360F25C7195DEE02FE8A1D168E5AC87B8C37B3AFBD9D13A0B2B420DFC7B571F4F029187570AA1C78CC27461AE7DEF5AD348586FB520760ECAFC965F66641A53C5D3B3EDAB3BB31BE465D77F51E39A2921C74A4044FA103D99163F7DF22EFDDDC09D53BC73912C61402A7BE5EC4D0AAEDE0F72C7230687D1B27720E14F01B2E3B428D2650DA6004285EE937EA5E00AF1E43B9DCA37C027AF7087B53D729F72A2C53DD2D4808295C7C12707BA881689193D9A1628B70D43F7E64FDB7C0AD248FB6969A72D7064F699A507437B41BA975ECA565DBF4652207DC58A1923DECE69FA8B9CBC25D41757F955887D56BDF050B50FE4F041DA363097A35F9CE2864492FDE5D2EFDEDF9042D8B49E8D62A22C2A4A9756909D0D216898B64965EB6EC24B018BAE637399B01098C65819E98DE107E2F6923FD991732E50E0607EB35B870F3F7595B3C91FB248DBE0BAB3C45297EA6458FC831B613C29FFAC20053F14967AEDD6926438D5D38E6284840D93564CA93187D36BCD0F62C254BB7698D2D95174F49DDBB946F3C9B1A34769944D5C47A6047B2BF109F87F415438407C65EC73BCDC846738821409FA074F76B43216250CC9DED5ED1BD4D5D5F40B9C4BA0C289B8A91E676DAD541FDACC0DA2CA800AA8830DFB4B27E98C5A8167E75F4AE010BF42B7B3F02D9E3228E70EBB1A1D5226A1D51B21E8E9641F3D80846629F6486B075FB661352B453D76FF8F3DE8E3DC799992F044D259274983542852E237E0D5A004AB93430B71BAB66541B06607624AD57515A72CE3B5B7230CD6873B6CA132C1D1F44B6BC38C5E25584E29A1B0D9B51BDCBD932FF6B04ED938C2F8C8DFBCE76293330D9FA35669AD58B61CCE953954ECC4D3B239765E9C34B014D1175357BBEEC397585818DC258866F4CF1F264E4C6C18E2B66483204954119703A6DFE5DB150EFB80A15D14E29F6C82469A5FC77D1E8B91FB6E8618C64216E34D4BAC5ED17137CB6189B3437DCAE961FD391EEFF664B018D622673CB88A0E33A70EA6F6C9EF364D4F7578F92D78BB033759AB10754E73B87976D4418A91E7C40CD2A6B953DED7E4F8DA004625A4E64F54B9B057B1C35D9061A937A9C5AF94CEB5AF258F901A0B38BF3952EFA5E1B53738B558600C8994C199D7A8C03FB94C884A4451DE3E247FA0CB576F74364AE6E6FEF1C720A6DE146B6BFF7541F04F5872EFB709293417E7FDF249B33303AAE92F5E29CE74B1992F9F16B8C5A11F3EAFE8E029A4E0DBEA155C8E1452E30F418B80A40738BA06B98ACC5244B9D80C4533A7B2403F2BD4357AC8A60BF797B257793DD1801B9E8F712D7C8ED708EE24D39D2B445EDDD79F19BB84
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CMUSerif-Roman cguidfix
/F1.1/CMUSerif-Roman renmfont
%RBIBeginFontSubset: CMUSerif-Bold
%!FontType1-1.0: CMUSerif-Bold 1.0000.0.7000
14 dict begin/FontName /CMUSerif-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /T put
dup 34 /r put
dup 35 /i put
dup 36 /a put
dup 37 /l put
dup 38 /space put
dup 39 /numbersign put
dup 40 /one put
dup 41 /two put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1338 1 index div -401 2 index div 1738 3 index div 1115 5 -1 roll div]cvx def
/sfnts [<


192122241739B02812B02039B01C11B02A3900B123001112B00439B01311B105203939B00D12B207161C3939393031333534363F01363534262322071E0215140623222635343633321615140E0207060733323736373307390409C96C463E3D2A0B16182D1B192F7B5C6B8A143830362F61935B0B0D0D2F1F12100909CD6E623C5323030B2218232523274355685523363B26282251060754DE00000001002A000002F502A3001B008500B21102002BB1120BE9B00C32B20105002BB1150BE9B00A32B215010A2BB3401500092BB00332B00A2F01B01C2FB000D6B41B0D0093042BB01B10B20013102BB10C11E9B20C130A2BB3400C0D092BB2130C0A2BB3401312092BB00C10B21304102BB4030D0093042BB01DD6B11B001112B00139B01311B01039B103041112B0023900303113372117232E042B0111331526200735331123220E03072A1502A1152F040615203A2A4C9936FEAC36994D2A3B2014070301B2F1F12A2D3B1C14FDBB2F03032F0245151C3A2D2A000000020020FFFA022E01C5002C003B00A200B22802002BB13009E9B22102002BB1190BE9B21103002BB10509E9B205110A2BB300050C092BB4023628110D2BB10208E901B03C2FB000D6B12D0CE9B00F20D611B10910E9B02D10B20035102BB00232B1150CE9B215350A2BB340151D092BB03DD6B12D0F1112B00C39B00911B00739B03512B305112830241739B01511B0263900B130211112B01D39B136191112B31500262D241739B105021112B01439303137342535342322071615140623222635343332161D01141E0133321E011514062B01222E02350623222E0237141633323E023D010E042001456E27211626191727B36C70041C1D0908090E1230252E11042B6A1E3C40277535260D212B1C1627422E236C8F0E2276070F221E21211E5C5446D70E0C0B020A0B10080E1C13105309173023212E081430215F010511182F0000FFFF002F0000011E02B71027000CFF7CFF311206000A00000001002F0000012502B6000E005400B20002002BB1010BE9B00932B20705002BB1060BE9B20805002BB40606005B042B01B00F2FB002D6B1090EE9B209020A2BB340090A092BB202090A2BB3400201092BB00632B010D6B109021112B00D390030313335331134262335371133152623222F451530B14566151B2F02291C0B2F08FD792F0300000000010025000001BA01C20020009300B20002002BB1010BE9B01B32B20B03002BB00833B41106000E042BB20B03002BB40606005B042BB00610B1070BE9B20B03002BB11509E901B0212FB002D6B11B0EE9B4090E001F042BB209020A2BB340091C092BB202090A2BB3400201092BB00632B01B10B20213102BB10E10E9B022D6B109021112B01F39B10E131112B10B15393900B106111112B2090E133939393031333533

00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/space 1 def
/numbersign 2 def
/one 3 def
/two 4 def
/T 5 def
/a 6 def
/i 7 def
/l 8 def
/r 9 def
/dotlessi 10 def
/grave.cap 11 def
/dotaccent.cap 12 def
/grave.uc 13 def
/uni0300.cap 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1338 -401 1738 1115}def
/UniqueID 4025032 def
currentdict currentfile eexec


6A6EA37D6407E9F650C9506A5E168598BB0A037CF74A3C842638C84C94CBCFF84EA3845718E27CDDCD2DC40880EA178F374BFC255482936D033D15AF8E6480724FD2B2215A54C9C968EF68B755014713C156A56C561AE9C0231A3749237A941A957CEF78A6BDF68AF901441FBAC0679AAF0408A309BF0A669ED2A552F71182A9DFE279EB408D7151963D5224C6D4CB56499C05606EA46DE4D82D4339111D2A3A3D8D6D8E4B883DF501AE15094DB4AE2C3A0D7A57A227F0BE7FFD3CF05EA91415D64A186194D1D196372AD521E600158E94562AFB8ABFAB28637C6E062C9E556099EB84059D594898263B17319B60ED64AFBD8A1F6A3646BE3853DD3CD0C75DF695BDC2746A28E6A4CBB34ECCB8FA12A2257B3A82B91DB88C391EC6F43B3E3AC580AA5DF4DE57F6822B0AE90F303C399F45D8E36699EA6F5E9C4F949F1460A2449D70F4F2756B5816E7FBB8F1091BD8ED603061BEB1D5F73A5A9D656B2F899272E3494AA4A3E45AA9FC010D2AD9299300D10F798DEE660258BAA785081AAD2E61249FA94556445BB74BFEA60B21F189CE7A8DA8CD1CD47CC16BBF4F2B13CC02BBA7FC46C59F7D73FBFEDC18C3F23CA36E8C386D3371F4D12FE30679FCBCF97C23B66EF1CA715BE9E3AE4D59C96AE8E6853F894E0631A9FCAAC98165668F6950A9C04FBEFB0798D8DA995281C376142041AC670E1BB64C1EC9F97E7626D454CFD1F657E4802AD5834851315AF4C97A5C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CMUSerif-Bold cguidfix
/F2.1/CMUSerif-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1017 289 rc
-2181.6902 2901.1831 m
3797.1831 2901.1831 l
3797.1831 -1596 l
-2181.6902 -1596 l
h
-2181.6902 2901.1831 m
f
566 287.0712 m
1016 287.0712 l
1016 1 l
566 1 l
h
566 287.0712 m
f
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
499 1016.9288 m
949 1016.9288 l
949 1303 l
499 1303 l
h
499 1016.9288 m
S
0 i
1 1 1 sc
CM
1 288 m
535 288 l
535 1.9288026 l
1 1.9288026 l
h
1 288 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
-66 1016 m
468 1016 l
468 1302.0712 l
-66 1302.0712 l
h
-66 1016 m
S
0 i
1 1 1 sc
CM
44 110 m
108 110 l
113.52285 110 118 105.52285 118 100 c
118 87 l
118 81.47715 113.52285 77 108 77 c
44 77 l
38.477154 77 34 81.47715 34 87 c
34 100 l
34 105.52285 38.477154 110 44 110 c
h
44 110 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
-23 1194 m
41 1194 l
46.522846 1194 51 1198.4772 51 1204 c
51 1217 l
51 1222.5228 46.522846 1227 41 1227 c
-23 1227 l
-28.522848 1227 -33 1222.5228 -33 1217 c
-33 1204 l
-33 1198.4772 -28.522848 1194 -23 1194 c
h
-23 1194 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 76 93.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-20.872 3.9000244 m
(!"#$%)[ 12.000000 8.000000 7.104000 8.432000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
95 198 m
159 198 l
164.52284 198 169 193.52284 169 188 c
169 175 l
169 169.47716 164.52284 165 159 165 c
95 165 l
89.47715 165 85 169.47716 85 175 c
85 188 l
85 193.52284 89.47715 198 95 198 c
h
95 198 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
28 1106 m
92 1106 l
97.52285 1106 102 1110.4772 102 1116 c
102 1129 l
102 1134.5228 97.52285 1139 92 1139 c
28 1139 l
22.477152 1139 18 1134.5228 18 1129 c
18 1116 l
18 1110.4772 22.477152 1106 28 1106 c
h
28 1106 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 127 181.5 cm
-30.528 3.9000244 m
(&'$\(\)%*+)[ 11.328000 8.000000 8.880000 8.880000 4.432000 6.208000 5.328000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
18.813171 1193.5674 m
47.57922 1143.9316 l
S
0 i
CM
116.58491 163.52916 m
113.28142 160.82048 l
115.87702 159.31621 l
h
116.58491 163.52916 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
49.584911 1140.4708 m
46.281418 1143.1796 l
48.877026 1144.6838 l
h
49.584911 1140.4708 m
S
1 1 1 sc
CM
91.288376 151.90953 m
109.28838 151.90953 l
109.28838 118.90952 l
91.288376 118.90952 l
h
91.288376 151.90953 m
f
/Cs2 SC
0 sc
1 0 0 -1 100.28838 135.40953 cm
-4 3.9000244 m
(')s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
71.821884 1105.5902 m
87.145546 1083.6715 l
S
0 i
CM
156.43744 223.60672 m
152.91618 221.1879 l
155.37491 219.46898 l
h
156.43744 223.60672 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
89.437447 1080.3933 m
85.916183 1082.8121 l
88.374901 1084.531 l
h
89.437447 1080.3933 m
S
1 1 1 sc
CM
153 251 m
180 251 l
180 225 l
153 225 l
h
153 251 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
86 1053 m
113 1053 l
113 1079 l
86 1079 l
h
86 1053 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 166.5 238 cm
-5.6279998 3.0000153 m
(,)s
/F1.1[ 10 0 0 -10 0 0]sf
0.62800002 7.0000153 m
(-)s
/Cs1 SC
1 1 1 sc
CM
204 110 m
268 110 l
273.52286 110 278 105.52285 278 100 c
278 87 l
278 81.47715 273.52286 77 268 77 c
204 77 l
198.47716 77 194 81.47715 194 87 c
194 100 l
194 105.52285 198.47716 110 204 110 c
h
204 110 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
137 1194 m
201 1194 l
206.52284 1194 211 1198.4772 211 1204 c
211 1217 l
211 1222.5228 206.52284 1227 201 1227 c
137 1227 l
131.47716 1227 127 1222.5228 127 1217 c
127 1204 l
127 1198.4772 131.47716 1194 137 1194 c
h
137 1194 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 236 93.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-20.872 3.9000244 m
(!"#$%)[ 12.000000 8.000000 7.104000 8.432000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
255 198 m
319 198 l
324.52286 198 329 193.52284 329 188 c
329 175 l
329 169.47716 324.52286 165 319 165 c
255 165 l
249.47716 165 245 169.47716 245 175 c
245 188 l
245 193.52284 249.47716 198 255 198 c
h
255 198 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
188 1106 m
252 1106 l
257.52286 1106 262 1110.4772 262 1116 c
262 1129 l
262 1134.5228 257.52286 1139 252 1139 c
188 1139 l
182.47716 1139 178 1134.5228 178 1129 c
178 1116 l
178 1110.4772 182.47716 1106 188 1106 c
h
188 1106 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 287 181.5 cm
-30.528 3.9000244 m
(&'$\(\)%*+)[ 11.328000 8.000000 8.880000 8.880000 4.432000 6.208000 5.328000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
178.92201 1193.5686 m
208.01437 1143.9241 l
S
0 i
CM
277.03674 163.52701 m
273.72021 160.83432 l
276.30853 159.31754 l
h
277.03674 163.52701 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
210.03676 1140.473 m
206.72021 1143.1656 l
209.30853 1144.6825 l
h
210.03676 1140.473 m
S
1 1 1 sc
CM
251.55779 151.90654 m
269.55777 151.90654 l
269.55777 118.90653 l
251.55779 118.90653 l
h
251.55779 151.90654 m
f
/Cs2 SC
0 sc
1 0 0 -1 260.55777 135.40654 cm
-4 3.9000244 m
(')s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
231.91542 1105.5913 m
247.36751 1083.6638 l
S
0 i
CM
316.67163 223.60585 m
313.14136 221.2002 l
315.59363 219.47211 l
h
316.67163 223.60585 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
249.67163 1080.3942 m
246.14136 1082.7998 l
248.59364 1084.528 l
h
249.67163 1080.3942 m
S
1 1 1 sc
CM
313 251 m
340 251 l
340 225 l
313 225 l
h
313 251 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
246 1053 m
273 1053 l
273 1079 l
246 1079 l
h
246 1053 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 326.5 238 cm
-5.6279998 3.0000153 m
(,)s
/F1.1[ 10 0 0 -10 0 0]sf
0.62800002 7.0000153 m
(+)s
/Cs1 SC
1 1 1 sc
CM
364 109 m
428 109 l
433.52286 109 438 104.52285 438 99 c
438 86 l
438 80.47715 433.52286 76 428 76 c
364 76 l
358.47714 76 354 80.47715 354 86 c
354 99 l
354 104.52285 358.47714 109 364 109 c
h
364 109 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
297 1195 m
361 1195 l
366.52286 1195 371 1199.4772 371 1205 c
371 1218 l
371 1223.5228 366.52286 1228 361 1228 c
297 1228 l
291.47714 1228 287 1223.5228 287 1218 c
287 1205 l
287 1199.4772 291.47714 1195 297 1195 c
h
297 1195 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 396 92.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-20.872 3.9000244 m
(!"#$%)[ 12.000000 8.000000 7.104000 8.432000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
415 197 m
479 197 l
484.52286 197 489 192.52284 489 187 c
489 174 l
489 168.47716 484.52286 164 479 164 c
415 164 l
409.47714 164 405 168.47716 405 174 c
405 187 l
405 192.52284 409.47714 197 415 197 c
h
415 197 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
348 1107 m
412 1107 l
417.52286 1107 422 1111.4772 422 1117 c
422 1130 l
422 1135.5228 417.52286 1140 412 1140 c
348 1140 l
342.47714 1140 338 1135.5228 338 1130 c
338 1117 l
338 1111.4772 342.47714 1107 348 1107 c
h
348 1107 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 447 180.5 cm
-30.528 3.9000244 m
(&'$\(\)%*+)[ 11.328000 8.000000 8.880000 8.880000 4.432000 6.208000 5.328000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
338.81335 1194.5674 m
367.57996 1144.9316 l
S
0 i
CM
436.58569 162.52916 m
433.28217 159.82051 l
435.87775 158.31622 l
h
436.58569 162.52916 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
369.58569 1141.4708 m
366.28217 1144.1794 l
368.87775 1145.6838 l
h
369.58569 1141.4708 m
S
1 1 1 sc
CM
411.28882 150.90952 m
429.28882 150.90952 l
429.28882 117.90952 l
411.28882 117.90952 l
h
411.28882 150.90952 m
f
/Cs2 SC
0 sc
1 0 0 -1 420.28882 134.40952 cm
-4 3.9000244 m
(')s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
391.8219 1106.5902 m
407.14554 1084.6715 l
S
0 i
CM
476.43744 222.60672 m
472.9162 220.1879 l
475.37491 218.46898 l
h
476.43744 222.60672 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
409.43744 1081.3933 m
405.9162 1083.8121 l
408.37491 1085.531 l
h
409.43744 1081.3933 m
S
1 1 1 sc
CM
473 250 m
500 250 l
500 224 l
473 224 l
h
473 250 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
406 1054 m
433 1054 l
433 1080 l
406 1080 l
h
406 1054 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 486.5 237 cm
-5.6279998 3.0000153 m
(,)s
/F1.1[ 10 0 0 -10 0 0]sf
0.62800002 7.0000153 m
(.)s
1 0 0 -1 969 44.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.6719999 3.9000244 m
(/)s
1 0 0 -1 103.61005 33.5 cm
-34.127998 3.9000244 m
(01\)23\(#*-)[ 10.880000 8.880000 4.432000 6.304000 8.448000 8.880000 7.104000 5.328000 0.000000 ] xS
1 0 0 -1 267.61005 33.5 cm
-34.127998 3.9000244 m
(01\)23\(#*+)[ 10.880000 8.880000 4.432000 6.304000 8.448000 8.880000 7.104000 5.328000 0.000000 ] xS
1 0 0 -1 424.61005 33.5 cm
-34.127998 3.9000244 m
(01\)23\(#*.)[ 10.880000 8.880000 4.432000 6.304000 8.448000 8.880000 7.104000 5.328000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
-33 1243 m
-33 1245.9933 l
-33 1248.7548 -30.761423 1250.9933 -28 1250.9933 c
-27.99777 1250.9933 -27.995539 1250.9933 -27.993309 1250.9933 c
32.630535 1250.9121 l
33.958935 1250.9104 35.233437 1251.4373 36.17276 1252.3766 c
38.558952 1254.7628 l
38.65469 1254.8585 38.775669 1254.925 38.907787 1254.9547 c
38.907787 1254.9547 l
39.032501 1254.9827 39.162518 1254.9403 39.246895 1254.8444 c
41.209549 1252.6113 l
42.160324 1251.5297 43.531345 1250.9104 44.971504 1250.9124 c
107.99355 1250.9935 l
110.75497 1250.9971 112.99644 1248.7615 112.99999 1246 c
113 1245.9978 113 1245.9957 113 1245.9935 c
113 1243 l
S
128.11005 1243 m
128.11005 1245.9933 l
128.11005 1248.7548 130.34863 1250.9933 133.11005 1250.9933 c
133.11229 1250.9933 133.11452 1250.9933 133.11674 1250.9933 c
193.74059 1250.9121 l
195.06898 1250.9104 196.34349 1251.4373 197.28281 1252.3766 c
199.66901 1254.7628 l
199.76474 1254.8585 199.88573 1254.925 200.01784 1254.9547 c
200.01784 1254.9547 l
200.14255 1254.9827 200.27257 1254.9403 200.35695 1254.8444 c
202.3196 1252.6113 l
203.27037 1251.5297 204.6414 1250.9104 206.08156 1250.9124 c
269.10361 1250.9935 l
271.86502 1250.9971 274.10648 1248.7615 274.11005 1246 c
274.11005 1245.9978 274.11005 1245.9957 274.11005 1245.9935 c
274.11005 1243 l
S
0 i
1 1 1 sc
CM
608 109 m
672 109 l
677.52283 109 682 104.52285 682 99 c
682 86 l
682 80.47715 677.52283 76 672 76 c
608 76 l
602.47717 76 598 80.47715 598 86 c
598 99 l
598 104.52285 602.47717 109 608 109 c
h
608 109 m
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
541 1195 m
605 1195 l
610.52283 1195 615 1199.4772 615 1205 c
615 1218 l
615 1223.5228 610.52283 1228 605 1228 c
541 1228 l
535.47717 1228 531 1223.5228 531 1218 c
531 1205 l
531 1199.4772 535.47717 1195 541 1195 c
h
541 1195 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 640 92.5 cm
-20.872 3.9000244 m
(!"#$%)[ 12.000000 8.000000 7.104000 8.432000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
659 197 m
723 197 l
728.52283 197 733 192.52284 733 187 c
733 174 l
733 168.47716 728.52283 164 723 164 c
659 164 l
653.47717 164 649 168.47716 649 174 c
649 187 l
649 192.52284 653.47717 197 659 197 c
h
659 197 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
592 1107 m
656 1107 l
661.52283 1107 666 1111.4772 666 1117 c
666 1130 l
666 1135.5228 661.52283 1140 656 1140 c
592 1140 l
586.47717 1140 582 1135.5228 582 1130 c
582 1117 l
582 1111.4772 586.47717 1107 592 1107 c
h
592 1107 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 691 180.5 cm
-30.528 3.9000244 m
(&'$\(\)%*.)[ 11.328000 8.000000 8.880000 8.880000 4.432000 6.208000 5.328000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
582.81323 1194.5674 m
611.57953 1144.9316 l
S
0 i
CM
680.58527 162.52916 m
677.28174 159.8205 l
679.87732 158.31621 l
h
680.58527 162.52916 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
613.58527 1141.4708 m
610.28174 1144.1796 l
612.87732 1145.6838 l
h
613.58527 1141.4708 m
S
1 1 1 sc
CM
655.28857 150.90953 m
673.28857 150.90953 l
673.28857 117.90952 l
655.28857 117.90952 l
h
655.28857 150.90953 m
f
/Cs2 SC
0 sc
1 0 0 -1 664.28857 134.40953 cm
-4 3.9000244 m
(')s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
635.8219 1106.5902 m
651.14557 1084.6715 l
S
0 i
CM
720.43744 222.60672 m
716.9162 220.1879 l
719.37488 218.46898 l
h
720.43744 222.60672 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
653.43744 1081.3933 m
649.9162 1083.8121 l
652.37488 1085.531 l
h
653.43744 1081.3933 m
S
1 1 1 sc
CM
717 250 m
744 250 l
744 224 l
717 224 l
h
717 250 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
650 1054 m
677 1054 l
677 1080 l
650 1080 l
h
650 1054 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 730.5 237 cm
-5.6279998 3.0000153 m
(,)s
/F1.1[ 10 0 0 -10 0 0]sf
0.62800002 7.0000153 m
(-)s
/Cs1 SC
1 1 1 sc
CM
768 109 m
832 109 l
837.52283 109 842 104.52285 842 99 c
842 86 l
842 80.47715 837.52283 76 832 76 c
768 76 l
762.47717 76 758 80.47715 758 86 c
758 99 l
758 104.52285 762.47717 109 768 109 c
h
768 109 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
701 1195 m
765 1195 l
770.52283 1195 775 1199.4772 775 1205 c
775 1218 l
775 1223.5228 770.52283 1228 765 1228 c
701 1228 l
695.47717 1228 691 1223.5228 691 1218 c
691 1205 l
691 1199.4772 695.47717 1195 701 1195 c
h
701 1195 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 800 92.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-20.872 3.9000244 m
(!"#$%)[ 12.000000 8.000000 7.104000 8.432000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
819 197 m
883 197 l
888.52283 197 893 192.52284 893 187 c
893 174 l
893 168.47716 888.52283 164 883 164 c
819 164 l
813.47717 164 809 168.47716 809 174 c
809 187 l
809 192.52284 813.47717 197 819 197 c
h
819 197 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
752 1107 m
816 1107 l
821.52283 1107 826 1111.4772 826 1117 c
826 1130 l
826 1135.5228 821.52283 1140 816 1140 c
752 1140 l
746.47717 1140 742 1135.5228 742 1130 c
742 1117 l
742 1111.4772 746.47717 1107 752 1107 c
h
752 1107 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 851 180.5 cm
-30.528 3.9000244 m
(&'$\(\)%*.)[ 11.328000 8.000000 8.880000 8.880000 4.432000 6.208000 5.328000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
742.81323 1194.5674 m
771.57953 1144.9316 l
S
0 i
CM
840.58527 162.52916 m
837.28174 159.8205 l
839.87732 158.31621 l
h
840.58527 162.52916 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
773.58527 1141.4708 m
770.28174 1144.1796 l
772.87732 1145.6838 l
h
773.58527 1141.4708 m
S
1 1 1 sc
CM
815.28857 150.90953 m
833.28857 150.90953 l
833.28857 117.90952 l
815.28857 117.90952 l
h
815.28857 150.90953 m
f
/Cs2 SC
0 sc
1 0 0 -1 824.28857 134.40953 cm
-4 3.9000244 m
(')s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
795.8219 1106.5902 m
811.14557 1084.6715 l
S
0 i
CM
880.43744 222.60672 m
876.9162 220.1879 l
879.37488 218.46898 l
h
880.43744 222.60672 m
f
0 J
0 j
1 0 0 -1 67 1304 cm
813.43744 1081.3933 m
809.9162 1083.8121 l
812.37488 1085.531 l
h
813.43744 1081.3933 m
S
1 1 1 sc
CM
877 250 m
904 250 l
904 224 l
877 224 l
h
877 250 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 67 1304 cm
810 1054 m
837 1054 l
837 1080 l
810 1080 l
h
810 1054 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 890.5 237 cm
-5.6279998 3.0000153 m
(,)s
/F1.1[ 10 0 0 -10 0 0]sf
0.62800002 7.0000153 m
(+)s
1 0 0 -1 667.61005 32.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-34.127998 3.9000244 m
(01\)23\(#*-)[ 10.880000 8.880000 4.432000 6.304000 8.448000 8.880000 7.104000 5.328000 0.000000 ] xS
1 0 0 -1 831.61005 32.5 cm
-34.127998 3.9000244 m
(01\)23\(#*+)[ 10.880000 8.880000 4.432000 6.304000 8.448000 8.880000 7.104000 5.328000 0.000000 ] xS
0.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
531 1244 m
531 1246.9933 l
531 1249.7548 533.23859 1251.9933 536 1251.9933 c
536.00226 1251.9933 536.00446 1251.9933 536.00671 1251.9933 c
596.63055 1251.9121 l
597.95892 1251.9104 599.23346 1252.4373 600.17273 1253.3766 c
602.55896 1255.7628 l
602.65466 1255.8585 602.7757 1255.925 602.90778 1255.9547 c
602.90778 1255.9547 l
603.03247 1255.9827 603.16254 1255.9403 603.24689 1255.8444 c
605.20953 1253.6113 l
606.16034 1252.5297 607.53137 1251.9104 608.9715 1251.9124 c
671.99353 1251.9935 l
674.755 1251.9971 676.99646 1249.7615 677 1247 c
677 1246.9978 677 1246.9957 677 1246.9935 c
677 1244 l
S
692.11005 1244 m
692.11005 1246.9933 l
692.11005 1249.7548 694.34863 1251.9933 697.11005 1251.9933 c
697.1123 1251.9933 697.1145 1251.9933 697.11676 1251.9933 c
757.7406 1251.9121 l
759.06897 1251.9104 760.34351 1252.4373 761.28284 1253.3766 c
763.66901 1255.7628 l
763.76477 1255.8585 763.88574 1255.925 764.01782 1255.9547 c
764.01782 1255.9547 l
764.14258 1255.9827 764.27258 1255.9403 764.35693 1255.8444 c
766.31958 1253.6113 l
767.27039 1252.5297 768.64142 1251.9104 770.08154 1251.9124 c
833.10358 1251.9935 l
835.86505 1251.9971 838.10651 1249.7615 838.11005 1247 c
838.11005 1246.9978 838.11005 1246.9957 838.11005 1246.9935 c
838.11005 1244 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 938 101.5 cm
-6.6719999 3.9000244 m
(/)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 67 1304 cm
287 1245 m
287 1247.9933 l
287 1250.7548 289.23859 1252.9933 292 1252.9933 c
292.00223 1252.9933 292.00446 1252.9933 292.00668 1252.9933 c
352.63052 1252.9121 l
353.95892 1252.9104 355.23343 1253.4373 356.17276 1254.3766 c
358.55896 1256.7628 l
358.65469 1256.8585 358.77567 1256.925 358.90778 1256.9547 c
358.90778 1256.9547 l
359.0325 1256.9827 359.16251 1256.9403 359.24689 1256.8444 c
361.20953 1254.6113 l
362.16031 1253.5297 363.53134 1252.9104 364.9715 1252.9124 c
427.99356 1252.9935 l
430.75497 1252.9971 432.99643 1250.7615 433 1248 c
433 1247.9978 433 1247.9957 433 1247.9935 c
433 1245 l
S
[
4
4
] 0 d
105.96931 1079.4506 m
158.5934 1188.8633 l
S
0 i
CM
227.32716 111.53201 m
226.94518 115.7869 l
224.24162 114.48658 l
h
227.32716 111.53201 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
160.32716 1192.468 m
159.94518 1188.2131 l
157.24162 1189.5134 l
h
160.32716 1192.468 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
42.288372 1171.3698 m
123.46439 1196.438 l
S
0 i
CM
194.2863 106.38174 m
190.90698 108.99521 l
190.02179 106.12878 l
h
194.2863 106.38174 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
127.2863 1197.6183 m
123.90699 1195.0048 l
123.0218 1197.8712 l
h
127.2863 1197.6183 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
51.5 1210.5 m
121.3 1210.5 l
S
0 i
CM
192.3 93.500023 m
188.3 95.000023 l
188.3 92.000023 l
h
192.3 93.500023 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
125.3 1210.5 m
121.3 1209 l
121.3 1212 l
h
125.3 1210.5 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
265.92514 1079.4512 m
318.66177 1189.8567 l
S
0 i
CM
387.38583 110.53398 m
387.01529 114.78989 l
384.30826 113.49683 l
h
387.38583 110.53398 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
320.38583 1193.4661 m
320.01529 1189.2101 l
317.30826 1190.5032 l
h
320.38583 1193.4661 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
202.55779 1171.4446 m
283.67139 1197.14 l
S
0 i
CM
354.48462 105.65197 m
351.12439 108.28991 l
350.21838 105.42999 l
h
354.48462 105.65197 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
287.48462 1198.348 m
284.12439 1195.7101 l
283.21838 1198.5701 l
h
287.48462 1198.348 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
211.49998 1210.7656 m
281.30011 1211.2019 l
S
0 i
CM
352.30002 92.773125 m
348.30948 94.298096 l
348.29074 91.298157 l
h
352.30002 92.773125 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
285.30002 1211.2269 m
281.30948 1209.7019 l
281.29074 1212.7019 l
h
285.30002 1211.2269 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
669.9693 1080.4506 m
722.59338 1189.8633 l
S
0 i
CM
791.32715 110.53201 m
790.94519 114.7869 l
788.24164 113.48658 l
h
791.32715 110.53201 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
724.32715 1193.468 m
723.94519 1189.2131 l
721.24164 1190.5134 l
h
724.32715 1193.468 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
606.28857 1172.3698 m
687.46442 1197.438 l
S
0 i
CM
758.28632 105.38175 m
754.90698 107.99522 l
754.02179 105.12879 l
h
758.28632 105.38175 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
691.28632 1198.6183 m
687.90698 1196.0048 l
687.02179 1198.8712 l
h
691.28632 1198.6183 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
615.5 1211.5 m
685.29999 1211.5 l
S
0 i
CM
756.29999 92.499985 m
752.29999 93.999985 l
752.29999 90.999985 l
h
756.29999 92.499985 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
689.29999 1211.5 m
685.29999 1210 l
685.29999 1213 l
h
689.29999 1211.5 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
775.5 1211.7043 m
831.80005 1211.975 l
S
0 i
CM
902.79999 92.005768 m
898.80725 93.524979 l
898.79285 90.525017 l
h
902.79999 92.005768 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
835.79999 1211.9943 m
831.80725 1210.475 l
831.79285 1213.475 l
h
835.79999 1211.9943 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
766.28857 1172.911 m
832.12146 1197.2001 l
S
0 i
CM
902.87421 105.41537 m
899.64069 108.20721 l
898.60223 105.39267 l
h
902.87421 105.41537 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
835.87421 1198.5846 m
832.64069 1195.7928 l
831.60223 1198.6073 l
h
835.87421 1198.5846 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
828.35162 1080.4705 m
864.23792 1180.1077 l
S
0 i
CM
932.59338 120.12901 m
932.64917 124.40064 l
929.82666 123.38406 l
h
932.59338 120.12901 m
f
0 J
0 j
[] 0 d
1 0 0 -1 67 1304 cm
865.59338 1183.871 m
865.64917 1179.5994 l
862.82666 1180.616 l
h
865.59338 1183.871 m
S
/Cs2 SC
0 sc
1 0 0 -1 969 166.5 cm
-6.6719999 3.9000244 m
(/)s
1 0 0 -1 49.5 263 cm
/F2.1[ 16 0 0 -16 0 0]sf
-34.32 3.4000244 m
(!"#$%&'\()[ 11.264000 7.568000 5.104000 8.944000 5.104000 6.128000 15.328000 0.000000 ] xS
1 0 0 -1 614.5 262 cm
-34.32 3.4000244 m
(!"#$%&'\))[ 11.264000 7.568000 5.104000 8.944000 5.104000 6.128000 15.328000 0.000000 ] xS
1 0 0 -1 157 81 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.9400001 3.0000153 m
(4)s
/F1.1[ 10 0 0 -10 0 0]sf
1.9400001 7.0000153 m
(-)s
1 0 0 -1 317 81 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.9400001 3.0000153 m
(4)s
/F1.1[ 10 0 0 -10 0 0]sf
1.9400001 7.0000153 m
(+)s
1 0 0 -1 721 81 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.9400001 3.0000153 m
(4)s
/F1.1[ 10 0 0 -10 0 0]sf
1.9400001 7.0000153 m
(-)s
1 0 0 -1 875 81 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.9400001 3.0000153 m
(4)s
/F1.1[ 10 0 0 -10 0 0]sf
1.9400001 7.0000153 m
(+)s
ep
end
%%Trailer
%%EOF
