%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 587.000000 220.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 587 220
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 587 220
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: CMUSerif-Roman
%!FontType1-1.0: CMUSerif-Roman 1.0000.0.7000
14 dict begin/FontName /CMUSerif-Roman def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /x put
dup 34 /zero put
dup 35 /one put
dup 36 /two put
dup 37 /three put
dup 38 /four put
dup 39 /p put
dup 40 /f put
dup 41 /parenleft put
dup 42 /parenright put
dup 43 /t put
dup 44 /C put
dup 45 /o put
dup 46 /m put
dup 47 /a put
dup 48 /r put
dup 49 /e put
dup 50 /U put
dup 51 /d put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1135 1 index div -387 2 index div 1495 3 index div 1094 5 -1 roll div]cvx def
/sfnts [<




233532363511214F603B2733171514171E0F122438757218341528570C26320E351901901F734A552A1C13191912200A074A3E741FFEBE1D121F0301021F0D2001440000000100200000032D01BA004700DD00B20002002BB11C303333B10106E9B41B212F3543241732B20D03002BB10A123333B13C08E9B02832B20D03002BB408060030042B01B0482FB004D6B1400AE9B40B0A004F042BB20B040A2BB3400B43092BB2040B0A2BB3400401092BB00832B04010B20438102BB12C0AE9B22C380A2BB3402C2F092BB2382C0A2BB3403835092BB02C10B540382C24000F2BB1180AE9B218240A2BB340181B092BB224180A2BB3402421092BB049D6B10B041112B04639B138401112B00D39B02C11B10F323939B02412B01239B01811B01E3900B108011112B20B0F173939393031333532363511342623353715363332173E013332171E011D011E013315262322073532363D0134262322061D0114163315262322073532363D0134262322061D01141633152623222035191A348D2F6575101148384B1E160901202D660A086935191F2B34531935660A086935191F2B34531935660A081F0D20010C25131F0B696962263C25193848BF15091F03031F0D20E9333C5749B8200D1F03031F0D20E9333C5749B8200D1F030000000002001CFFF501D701C0000A001C004600B20902002BB10F09E9B20303002BB11808E901B01D2FB001D6B10B11E9B00B10B20114102BB10611E9B01ED6B1140B1112B10903393900B1180F1112B2000106393939303136343633321615140623222714171633323637363534272623220607061C815D5B82835B593119274B253E11161A274A203F131877BE8B8A605E83E9612C4328222C5A602B4122212C000002001CFF3E020901BA001F002E008400B21202002BB12508E9B21F00002BB10006E9B01A32B20C03002BB00933B12B09E9B20803002BB10706E901B02F2FB003D6B1170AE9B109203232B217030A2BB340171A092BB203170A2BB3400300092BB00732B01710B20328102BB10F11E9B030D6B117031112B01D39B02811B1120C393900B107251112B40A0F15282E2417393031173236351134262335371536333216151406232226271D0114163315262322071314161716333236353426232206071C35191935903C50557C845B324306193569080A6693040A284139574F37274416A30D2001D421111F0B4242845E5F84331309A8200D1F030301340F0B103D755854752A260001001C0000016C01BA002B009100B20002002BB10106E9B02432B20E03002BB00A33B11D08E9B20E03002BB408060030042BB21D0E0A2BB3401D14092B01B02C2FB004D6B1210AE9B00B32B221040A2BB3402125092BB204210A2BB3400401092BB00832B02110B20417102BB11111E9B02DD6B121041112B10A28


00>] def
/CharStrings 23 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/zero 3 def
/one 4 def
/two 5 def
/three 6 def
/four 7 def
/C 8 def
/U 9 def
/a 10 def
/d 11 def
/e 12 def
/f 13 def
/m 14 def
/o 15 def
/p 16 def
/r 17 def
/t 18 def
/x 19 def
/grave.cap 20 def
/grave.uc 21 def
/uni0300.cap 22 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1135 -387 1495 1094}def
/UniqueID 4069853 def
currentdict currentfile eexec

61449230A9DAE2C324E9749B422E1A514E02AC94FAD401BC910F06C74A599885210ECB5C9A0540989B6851CB1567EF055BA9AEB0816A4D1E81E33A85D35E1926DD3666336898A3D570073FFC2C87FD72CB0B42348481E6868ECDB8C868081A5B194D60274C3B2326BF106A867D2B491AF27B7C87D24768B860FE5574CC52E418A20C4288EE904CF8C60A7A15194F6E42D9011CAF881F046EBD72711AA8750EC0972B4B1F83A1F4152C77042332C4DA1BE150199094FE84CB932A19D70A332DB7BA87A9348A93FE33BD5F8423DAA772B5BAE6EBC929DCF6F0AC51CFB15D15D520DBDB16FD171CBC3EB11C641B27F9F363343B13617DE1720FC7CB36466608F41A5FFB11AA52F3E5A73EBAED08450664AAF7931A7DD0FCE01E9213DC65867ECC29B31D6527FC0828B90E418B6A96EBFAEE1B4BABCBE508F6F6338C403518BC1CB022B5B541A47FF28CC87A1C6C05D95EB1C6782DAAFC3285A49894ED30F09520D4F22157FAF1FC0F77A61FAD54250B6E4B1DE1CA53C750C769324A2E0CEE51FEB181B328772AEFCEFC833BAC6D58BEBE8BC129949650B623EC29CD4E22CD4F7082A645B1AAFEC993F9F56C251B2E1C192B682FD7CBC175A30E6C2BD1BE4EF50D9C12ABB81771DABA09BBA957954103EFAA962210D982223CEB17C79B755EF90B248598580DD6ECBF039E6115CD3C115D2BD6E088F3EC1BF654C3B4E83944943C43CE131295B26A959B64F29AA443A10791DA5AF2E0C86F424542EF9556A92C52AEE805DBC97BC7B39379F9E10A944D963815C046DB51B95A5E2B065AEECECAE785C0F665BF2593133B0FFD6685060F01D5B3F2C496E90100F96E83D26822160D54728D909B083EA957E1BEECA9CF68F2D44C9358405A75278A6F266FA25FE6C833423FBCC2C85EC158C4555351E80563391E7BCF1F322B3A946DF0B9D0D589F199E3843932710CEDB7D4BD2DBE9115A1C2279274AE82FDF7A29B62934D3376633E51A77D5B4F1D835AB76DF410CECCF2BB0174D4B3E9698DDF4CB24B0F80A3EA885A7FB8FCD6F8A6C7D7E35BBCD128E99BCCB0E335A648250CCFEDBC9F0C17AE9B653F05AE45894D3A07303ACABE734284AFF1D4C00DBB5A7C931B63342E4B2D4C20CD0DF9B45C96EB2E0705BC808F331FB79858E7259EF7883A0091117DBAA625BB847516F9700CC6E626980249BF434CA6A16431EBF68E123168E60E619FCC739F5E9C837371A5AD9061F5D272A831859ABF9FCBFA9E966AAB4304E3A976BABA4361A64B0DD09C66E65F57C98479CEB9056BC896FA6543B4D6FE4B3698A3B22B04FA8F05FCC9BA6882CC4723E8DC062BB1ADE29A336CF3FAD95B9AD258F54159CFA3C9ED922F516A4350BA210E54558534FCFE177D1CD788D75D43334FF5DA0A8DB25CF3606324415AFDFFC9114E2D0835B84516E08CACABBF69EE7512F0BB27
E6880994019EA7DD0C3AB930DD86D259B43D6848B7B1028795CF930B55DD66AE2C8A0B594C65A324865A4CDC26C1BBD070E44756129236572D49C5B3509BDB322A8471786A2F83AB6BF28E911ACA15B512D4E11C450562B982E617EC7094BE050465ADF5AB3D3A3347596D4024B8460CD45844BEFDB67C23A854EC7B692396497DB6CA72F114AAC353258E9289A794187ABA78DF2BC0BCA33CA7196BABB699B6C3411AC1032C88045AEA3DCBB7D7800FB3C59EB984846C3655710DF2FD8619FB19A1A938B5E12B36ADF0147F8115F02837EAF9E7E511F7EC2A4AD848D0125C82BC32A1DC77E1F7F1878A315DA458ECC554B610E400EAFE1E8B0F1BB5CBF676CF58B63E6F1778013A2490FA6E936E9E8A4E386E621DFA083A32DE6A138AE128FDE9C823DDCE45D37927CCFA7F46806477B4D84E94F2C9AEFF3CE6D00E5B661B72EC27BB9076979501D72A51418376399D8D25C6E8D2D67DC0F0053229D85E4281BF6AC9A30EE4F5D43FC4DE62B70DDEFD6B388DC3963EFAF195333FD0C4026A3122C20FBBFB3F731D4998B9125A225C531AF7984132FD2EA6EE2AA46A3705B95E110035A503AB10A561CC18903596D74C198CBC9CE7B001C008D96FBBEBCFF6AD03E5058330A11FFB8A31C3D85FFB0A263B1C72CF1D85D4F9B7CD73A5C21BCC8D39F9F1EFB372176EDBB291CEAF1124CCE0DC19FDE860FDBDFEAB704B72FEF3C95DF9BDC3B87EC21844138C85CDD991795880383B3A054407845674681CEC7407342B176E793DDE7BBB55CF35513D55B2E73D9F0C93B3441D122C5965F2041D145D87423220A987DB43BA3D9C81E61709AEDC36B393B6663280880D5CAB976F2B1F4601C0948D23EBDE35FA110AA3F5059DE38D75EC1FEE76D1304ABE9862ABAEA006C37E95D2A07E96A1BC3723B2B16F5679F4F00ADC8C08477355EB6D67F29173DAEE24816A7EB019DFDABBCD78C5EF114AFE5FA453B9F03E4ADE7AFCEBB71383C6830197ABA91DCD5D167724BA8BD0ECDF79A8A7DEE89567F09592C225C83376064E970F99020CC38052D3CCD61387332A3F7FC2C27F91179C11C06272080876C9ADD2505D889D78B70701409275A3D0C0A6C327121BBD2193FD65D0FAB3625D2AE11914A15FBF911F2F2206E942DBAA26012E42FB8B86D9C504A542CC336EA6B3805B8F5B5019EC1E22D85F567D939AEFB823328CF3BED3CF3D53D65C963271DC64818484C7C797A4CF647B8B2FC5070C904BF53D212EE75F963DB38516594730041A66A48036A0D9D7F6272DD7B8AE6F1B68FE33194A38CA11A729E2AF299C4E4AFED10F07FE2AF3FCDBE41601FE0F76DFE382F6E38F16CE961FDAEB9EA189999853A8BEE3CC44CF8D82D91222B31E0A53FCB95204082726FEB47775D2A0D08FEAEE9E7F48D84827E18070C7ABAEDAB885CAAE5FFC4794D9F604E14B2046
238AAF8120AF597C32717D28D5F5ABD5CDB3B27989530317E06114710D5DA041DFFB51E34FE91742D9BCD48CAF14374531451E9F840ED9BF123BBEBAE93542BF70267D1AE9469DD7F4AD3DA37A32FD5F8669DBB18D7AEEB416BDCCE8CE0977004CE2B2C5F273AABCF462BA0BA52F865928F665030A8DEE0E3A12D7513028C142058055B439AF276AE4A767C1B276916FB6C1ECBD58C61F5E1B75F45B149472729B0225314301FD815D1E38EA5EF71B4793094BEEEB8E15BAF881E03C8373B1BC0205611313E364C2EBF66B5FCA0773928DC09DE470B34917FFED8600965D938E056D4FE91900307641C4A7DFEA9D895E527E6B0338505E1B19D18D15216956D97F8E1C147AF7A305FB2CCDD7FD1536C02B7C97D883AD2E59C1A6B60CD9306D311932E5B1B9BC7D0CD9FC4AC72841239A732ED3C1526CFC9F1AAE8CECE3E4031370C8D9D1FBC478E17971016EEACA929154ED79E6E9688A2AAEFA64829510A787C0B34FBA07337137A43BFA5E6F9D2D4BBC78CF220C111626E8DD4E7845D4B1D125F9CA2419372D727EEAC08166AA47D1A654D928BBACCDF379B6CBDAED9A429A174F42AF3791224D1E51E9694D5A0BF4A9F10CD4A5F23B3A51D52A41C02530E40A3106A10E0A5672AE80806598F0E5C9D8650D87D86BBE8170A8D8763FE951453525988C4E11FFB72711761B6E39CD0BA45F579EFC50399BCF38816D1CFD985FB716F7D31242CFE20E0A27D03686070CB512E21170D965CFADC0E4EA0A68D5C8C7DBA94C6F5C93E472838983C2F96D26BC2625BACEC9DE923617B24B2B16CEAEE341078E197BAECCEA145652A4D581F2CB829098505466CF42139D8BC325B40BBE16DDAFF2EA9A2BA05C948BA31A4CBB1879F7857C1FCA6E4F1A511EFA9F8FE3A7B135515E20A6E102962E3F1868EF1F07A6154CEACC9DDDF6946DCBFE36D9FFA939B8A473FA7F9C3722D08E34687DFFB3B5EA83DD248B6D7999974027327CC867F263A13886CC2484DD58F594EBFB8825314E2456BA33FE197B2BC59AE03B67CF8DCE9B8F5154FB4B89629B75A4EFD307CF4C367AC9C648DB638CD92488B54DC194B967300FBDC7BC02EE27E3434A1AB826EF1B9B1DBD8F084E51ABE84708EB977166F634D039F6204D37C2755DF5088C0EB3EEC0571B418B280AF5C4F9EB5FB3549B8BC160C2398124BCCC74CD3B4079A87AE4290B6ED2F0D393C8E3149DBEB05768243355546657CF1632C304BB73451E5F870F04343CDA84DC0AFDD6821CA8378E36DE78212120C642438B13B6493FBC7B474D3646B7F7BE51485982C6F2BB516846B59DCE0DB9C2CA57656A5A7113968B654ACED2EBC89D88CD2F2D4BD2D64E484684C4818E7972E6C62EC86B65B605D89CFCFDA534EED4D562D72356E723B0B302D58751E5E8D89B1F7FA3B9E25CAB0FDAC0BF5DEF3B407C3A668DC380

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CMUSerif-Roman cguidfix
/F1.1/CMUSerif-Roman renmfont
%RBIBeginFontSubset: CMUSerif-Bold
%!FontType1-1.0: CMUSerif-Bold 1.0000.0.7000
14 dict begin/FontName /CMUSerif-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /F put
dup 34 /e put
dup 35 /a put
dup 36 /t put
dup 37 /u put
dup 38 /r put
dup 39 /space put
dup 40 /v put
dup 41 /c put
dup 42 /o put
dup 43 /P put
dup 44 /d put
dup 45 /i put
dup 46 /p put
dup 47 /L put
dup 48 /n put
dup 49 /b put
dup 50 /l put
dup 51 /f put
dup 52 /G put
dup 53 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1338 1 index div -401 2 index div 1738 3 index div 1115 5 -1 roll div]cvx def
/sfnts [<


2F02502F6EAA68FF2F0301540A0D1A1524161418192917180B00000000020020FFFA022E01C5002C003B00A200B22802002BB13009E9B22102002BB1190BE9B21103002BB10509E9B205110A2BB300050C092BB4023628110D2BB10208E901B03C2FB000D6B12D0CE9B00F20D611B10910E9B02D10B20035102BB00232B1150CE9B215350A2BB340151D092BB03DD6B12D0F1112B00C39B00911B00739B03512B305112830241739B01511B0263900B130211112B01D39B136191112B31500262D241739B105021112B01439303137342535342322071615140623222635343332161D01141E0133321E011514062B01222E02350623222E0237141633323E023D010E042001456E27211626191727B36C70041C1D0908090E1230252E11042B6A1E3C40277535260D212B1C1627422E236C8F0E2276070F221E21211E5C5446D70E0C0B020A0B10080E1C13105309173023212E081430215F010511182F000000020025FFFA025802B600120023006B00B20B02002BB00E33B11509E9B20205002BB20105002BB1000BE9B20503002BB12009E901B0242FB010D6B1030EE9B01332B210030A2BB3401000092BB00310B21019102BB10810E9B025D6B103101112B00D39B01911B1050B393900B120151112B208030D39393930311335371136333216151406232227072311342613163332373635342E042322060725B13B586C838C70543E312F15872E4946251A0106101A2C1D274516027F2F08FEDB317E65687D3E3802581C0BFDE445342766191D34212311241C0000010026FFFA01DE01C50026006500B22402002BB1170AE9B217240A2BB300171C092BB20303002BB10F0AE9B20F030A2BB3000F08092B01B0272FB000D6B11510E9B01510B2000B102BB10510E9B028D6B10B151112B3030F1724241739B00511B20D191C39393900B10F171112B00039303137343633321514062322263534372623220E0315143332373E01333215140E03232226267F7EAE26191727141A272534190D028B5B2204070D18081A28492D7286DE60875C1E21211E1C12061E253D2119C1520A050E04172621197F0000020026FFFA025902B600160026008800B21402002BB01133B11E09E9B21002002BB10F0BE9B20B05002BB20A05002BB1090BE9B20303002BB12309E901B0272FB000D6B11710E9B01710B20020102BB00532B10C0CE9B20C200A2BB3400C10092BB2200C0A2BB3402009092BB028D6B120171112B2031114393939B00C11B0123900B10F1E1112B01239B02311B3000517202417393031373436333217353426233537111416331507350623222637141E04333237352623220706268C6F4D3A1530B11530B73D4F6E82800106101A2C1D4D352E4947241ADD687D2DC31C0B2F08FDA01C0B2F0631317F64191D3421231149FA3D342700
00020020FFFA01EE01C5001D0024006B00B21B02002BB10D0AE9B20D1B0A2BB3000D13092BB20303002BB12109E9B41E0B1B030D2BB11E08E901B0252FB000D6B10B10E9B01E32B00B10B2001F102BB4070E001F042BB01532B026D6B11F0B1112B2030D1B393939B00711B0103900B11E0B1112B107003939303137343633321716151406232114333236373E01333215140E03232226373326232207062083746738380D13FED28E314E1005080C180B1D2B492D778E80EF05733D2214E162823638621308B82C240D081207192520168180A6341F00000001002A000001B502BC0026008800B22302002BB1240BE9B01D32B20605002BB11309E9B213060A2BB300130C092BB20103002BB01933B1000BE9B01B3201B0272FB025D6B00232B11D0EE9B1190EE9B219250A2BB340191B092BB340191E092BB225190A2BB3402500092BB01D10B2250F102BB10910E9B028D6B119251112B02139B10F1D1112B01339B00911B10611393900303113353335343633321615140623222635343726220E031D01331523113315262322073533112A4B7A54373B25191726170714151F16117973572466156945018D2F654E4D34231D21201E201102030F172F1F652FFEA22F03032F015E00000001002D0000026702B6002300A000B20002002BB01233B1010BE9B210161F323232B20705002BB1060BE9B20805002BB40606005B042BB20C03002BB11B09E901B0242FB002D6B11F0CE9B1090EE9B209020A2BB3400920092BB202090A2BB3400201092BB00632B01F10B20217102BB1100CE9B210170A2BB3401011092BB217100A2BB3401716092BB025D6B11F091112B00A39B01711B00C39B01012B0143900B11B011112B1090A393930313335331134262335371133363332161511331526220735331134262322061D01331526222D451530B10138714D4D45545454451C1B375E4554542F02291C0B2F08FEAC60434DFEFD2F03032F010E362B534BD12F0300FFFF002F0000011E02B710270018FF7CFF311206001600000001002F0000012502B6000E005400B20002002BB1010BE9B00932B20705002BB1060BE9B20805002BB40606005B042B01B00F2FB002D6B1090EE9B209020A2BB340090A092BB202090A2BB3400201092BB00632B010D6B109021112B00D390030313335331134262335371133152623222F451530B14566151B2F02291C0B2F08FD792F030000000001002D0000026701C20022009900B20002002BB01133B1010BE9B20F151E323232B20B03002BB00833B11A09E9B20B03002BB40606005B042BB00610B1070BE901B0232FB002D6B11E0CE9B1090EE9B209020A2BB340091F092BB202090A2BB3400201092BB00632B01E10B20216102BB10F0CE9B20F160A2BB3400F10092BB2160F0A2BB3401615092BB024D6B116
1E1112B00B39B00F11B0133900B106011112B00939303133353311342623353715363332161511331526220735331134262322061D01331526222D451530AC37784D4D45545454451C1B375E4554542F01351C0B2F086C6C434DFEFD2F03032F010E362B534BD12F0300000000020020FFFA021E01C5000A001F004400B20902002BB1120AE9B20303002BB11C09E901B0202FB000D6B10B10E9B00B10B20018102BB10610E9B021D6B1180B1112B10903393900B11C121112B1060039393031373436333216151406222637141E04323E043534272623220706208778778886F286800107101B2D3E2D1B10070115204A501E11DA67848467617F7F6C1E1F371E220F0F221E371F1E6722333A22000000020025FF3E025801C200180029008A00B21002002BB11E09E9B21800002BB1000BE9B01332B20A03002BB00733B1240AE9B00620D611B1050BE901B02A2FB001D6B1130CE9B01932B213010A2BB3401314092BB201130A2BB3400100092BB00532B01310B20121102BB10D10E9B02BD6B113011112B2070817393939B02111B10A10393900B1051E1112B20D1221393939B02411B0083930311733113426233537153633321615140623222715331526220713141617163332363534262322070E011525451530B13F586B808B71493745545454B703082D3D37504635442E0B049301F81C0A2F0831317E65687D2DBA2F030301370F080A365F625A612F0B090E000000010025000001BA01C20020009300B20002002BB1010BE9B01B32B20B03002BB00833B41106000E042BB20B03002BB40606005B042BB00610B1070BE9B20B03002BB11509E901B0212FB002D6B11B0EE9B4090E001F042BB209020A2BB340091C092BB202090A2BB3400201092BB00632B01B10B20213102BB10E10E9B022D6B109021112B01F39B10E131112B10B15393900B106111112B2090E13393939303133353311342623353715363332161514062226353437220E021D01331526232225451530A6295C2A402530251323341A0C572466152F01351C0B2F0871712C261C21201D1B13273F3C1EAF2F03000000010015FFFA017E027B0018007800B21502002BB10C0AE9B20603002BB1090BE9B00032B00910B10109E9B0052F01B0192FB017D6B10A0CE9B00532B2170A0A2BB3401700092BB00A10B4040D0093042BB0042FB20A040A2BB3400A08092BB00A10B2170F102BB4120D0093042BB01AD6B10F0A1112B0153900B1090C1112B110113939303113353E0137331533152311143332363D01331514062322351115464E012F92923A18242F41389E018D24027751BF2FFEEC572D2F3335384A8101120000000001002DFFFA026701C2001E008C00B21802002BB01433B10609E9B21802002BB11306E9B20F03002BB00233B40D06005B042BB00032B00D

062B5821B010594BB014525821B080591DB0062B5C5800B0062045B0032B44B00B2045BA0006021400022BB0032B44B00A2045B20B49022BB0032B44B0092045B20A34022BB0032B44B0082045B209B5022BB0032B44B0072045B20820022BB0032B4401B00C2045B0032B44B00E2045B20C6E022BB10346762B44B00D2045B20E0E022BB10346762B44B00F2045BA000C7FFF00022BB10346762B44B0102045B20F2F022BB10346762B44B0112045B2101D022BB10346762B44B0122045B21114022BB10346762B44590000
00>] def
/CharStrings 27 dict dup begin
/.notdef 0 def
/space 1 def
/F 2 def
/G 3 def
/L 4 def
/P 5 def
/a 6 def
/b 7 def
/c 8 def
/d 9 def
/e 10 def
/f 11 def
/h 12 def
/i 13 def
/l 14 def
/n 15 def
/o 16 def
/p 17 def
/r 18 def
/t 19 def
/u 20 def
/v 21 def
/dotlessi 22 def
/grave.cap 23 def
/dotaccent.cap 24 def
/grave.uc 25 def
/uni0300.cap 26 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1338 -401 1738 1115}def
/UniqueID 4025032 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55432D4F3B2AF89AB3F665ECA680A77DC68550F721A1AC91638CE0630B3BF0E1E8E483C58480D639936DF84C2D7B3842CD20473EFF8DD97366771E579149EE58CC143A5B329EBA7102AC34DE14A0587D9F946108547E09622B0592D85011C4D7CC55037CD6068FB9AB8DEA40B85B7729C26A6636828F3C66A70BDE5126661C417E7559D8F55046A46C763FE5CFBAA95A9827539E66603B4334D8916A562EF841C03E18C81DBBDDD0FA6C9D30091D0B80C15350C4BD429B166FCEC32231AA563B6B15E79B9693410929F79BF38C74234759FB26E192DAE0DDBC99F22A2D1383D116736BDB65E306274DE38F530DBF0A3E14BDCE2311506967620B7000F633D0934CC9BF263F9FE9F848CECB6DF27DEC8AD1EBD0588DE8C76484959CEEE9A21922BA7C3025955F5FC42C108EAD7AB2438447CB3C49B9C3C85E1197FF89CDBBD96CC40676CA0CA582DF3C4244C26ED06977B6B63B518D23699A3020F69FAC484A9D83B6ACF82E71E1C5FFC17E14593A6C2ADD9427D8A0075C3BCA7D1C428545DA6A89D69F9CAEB87C26912D53B0169BAE02B0C1BDB0C13F05460E5ACC51112579A67BE650A16BA0828B1863216A916C8F04AAE90D1EDEFC6F89E76100944DE5918E4DC9E0B6590CA0E89FF39AF81A4BB72D6374F8EC5473EF6ECD4BD499563C27F06D1359DB111837E3002B6FEA3717602C878679D9372D3CEA7C6749D2DD11486AC9FABE4E585735D7DD534E948D792EB2B3CCE83E49F99B19CFA3CEC3D1C26B364C889AF078EB37280BBEB6C219C5A1D59F97C7314D390F7256FD18049132E819394F359

6890BFB83DC7564CC78D07C2DF5D261B6E2475D5062F3DF35E534AA04C88D5F06404DDF2AF79C92BEEEE813B3899DF6CF719D5C209930C9757BAED838547F3F3A4BDAE7BBF5000F90CFF98F147ED16FAD1FC935279131E435BFC6AB4AEA76A09F7222EE9B222D38A7E838EE831910ABEA2EEB3DCD332D311CF0B62A1370EF773CE71004E8564A6F371F310DC11AC06585A0B462814D73EB2EA985A7B23BA58F97C77DE436BFC331A705894747683BD0F96C302F1C460C6922029CA0E06FA5E47710E28CA306E47F426A226862840FD5A0D195802EA3FCBDEA23D9EBE8FF09A9AAABBB481A6C83C5C94F9EF9D2EA2E6078CC890076FC8AF1DA67DD0956AB8EDC92D43127086881CB1DBD0ACDF53C49E7CD102237CF100EFF5E0CCF40E6EA43FE2042CA8BC395DE9254FDE50EDF739A7C9FEE45B98A903319E42E8258E4C9EF76011086CC7298713B801F8AA549DFE61B32FA2979856779183EB6FD2C8DC1FD09FCB504C70525A43BF50303E7B641779A4EFB521B0C48DDB243C400BE7D7704EF75DC98BAB2C6D1AD95B8928BC937E746809780B3EE8268ECA5C1F5C144833A7A7BDF67215321B2618B1ECB20702341A766F2622398858DC1CD6D406C627E7F03666CE441EAB2D877535DB86A29F70112AFEDD11B462C9FF1EEBC3CC1B8CB785251C015A3F4AF6092CEFB8E9AC81A86F0B17FDDB2B86A3974D9E5DAFA7FED9D5D31697592B8B4A76626D9BCC6ACE7E56AF12E3D51058D551F0C7CA9BA893150F89AAAA2C65F53F0EE404C191FB697D407E5E42940CFDAB8D4B4EBE02B6D341B58F44ACF90AF82F1FE79502D1C70BCB657B0524B0D2865B5B2CE78B06F05C6A9D9334C192B79292C15F48FBFB3A63DF68F0FDD6217057862A1545F7E377FB621AD8F5A0DA5BE327CB2097725BEDB67D3108E1691DF00CEEA2AE1C0D6D31B4758D652C075993B889B2195F2FC2CA3AFCB6B598141E55875BC9D10919DE40B517C6EBE75725A30BCBD2F3855D4535A2291A7D0B75EF59B52A2139A77835B51A89A503321C1205D39C5AB408F5CA92722DBF1756715815097AF812C59A92921B7AE97F3BAA06C01B845BDD5F005A116B3CA31254BB376FC3D57640401022A824D3093F84BA69094DE78D9C6E2024D4960380F65DF76B29F51B6FA5A16AAB8B16A8CB40813605C69FF59C4FF496DF5653617A8EEC3627A30919C3FB12B50EB76DC998D65DE3389CECC4CFBED178FA673FBA8AC2BE96A3DF77C83C4891B8D867128A21FFFF447EEDA44E306021AB970C40F9A64D8C5E62D448F76144AC9916B18C8EC1D67ABADDBF12DD75DBF48B1F2EE66B8FB7ACE8E89B017CBB74F587DC9E545EEB9D24560158DDA57631117259F34C46822BB1793F1F62D660DDA240C5AB0C0D4951FD5B8D69773E433A3FAAE2EDA4247761E54240238D3E5910D8C7AB2BD2B34FFA
23DFE4136544CFE9CAEEAE1C20389838E1E464F0016597FC977804C2BD5D8E72081488EC9F25B64E93D0F796380A3EB776994F1EC6F00A8B015B182F704DE35D6710E6A25782442344F16608924E8BD4C3C35C9424BCCF1F75AA50850F8D8A5DC1338F1BF741B77DA40A884D9191DBF5D16976EA5C4FBB893730AF9FA5100DBF8B6B8359D007A6886B334A6DFAC2A96DE90CECC6700A318386BABA10F9B2F1866DCA140C5C8BB61EBBA9B4134A616CBF65CE21733EC62FFEDB0634D3686D3155FEB5CACBAA74DCA6331ECD94102D4584F3F129C70C89F64F551B5997DE26136A934A5B8544D4C260DEA18BCE86AB8D28A6652E36CC2943B4995F40FD5B06AB7843CAC087C4029C05A9AB3EDACB133A01B0AF9756E01803009A8AEF0EFF132F91DB572C4041571E975BAF5EC984C968E092C675BCA06C85466F027CE0C9E2686B7CD8792905DC3B4EAF16E16ABB56EA0C05BF3CA05A9D33D99FFF77317C7A1F7E732FCA36C08EB6559686714B7FE12EEFD4076CF9DABDD223351EB4E751E001BE8E2695555F28FC12BBF86BF2528679721F1B1457F349F40C5998F78A560F0E0918FB2458D1C0BFFC13057BCC500D6B25969A013643CF5BA7F2D2DA68CC8607A10A9783D7D9960FD0E009C315DFE7E4A6112942825B89A515335427EBBE6B4286D9E84488401743928BFD4EE94D7B940858FBCA68E7D528A043BDF042F2ACF226A26EE648F70694F8E3710830DF315F7D954DF7E42F51D01EC675F1AD3DA3306C52111C0AC32DFE3ECF497F614884C957908D9D2C15E184CD6A6E4F2E9AE9B6AB6A8BE1D5249B07FB968AAEE928636BDDE3ED3C4231397464D475526840F59F533D24379AE31A813590CD47824125CE2155897A36D52D80A855770CB7A9AB8E5DDCDB8C234AB8EDB26CE49AE36001832DCDA8A6948E42070BEDFA14BA6FF9DD42D2020D9E14B4C1BF123A1FE6D30DD74B062518DB79B769EC9CBB35B9367AAC8CFB29BFBD5FB3975FC59E327D0BF3A01CF740FF01BC60CACEF3048858EAD70352454D14EC922603B7E81191407C95BE531CB02138A6C7E2CBADC334D8AA07669744DCD15A05ED3DB76F6232A5C2EEA4BF77D9A4B7FD3B306BD865FA1D55C8065B7D1A72CE3A73F8FB210213E71491B673B7D1F132909ECCB53F808648CD13C2632BE3D885020311C9DFA8A233EEED8F245E3BB131F5ACA682B5E20C9B4589272E4E3485386E045A0ACD5194EB6FBCD6F13B7AA9FFF68A70F417B51E1E0D24ACCC72197AC47E88D0B4C1434BAD053278D2127C4876C1B625EF01E670CF95922D48473A5ABF2BFD57270124C68461B8A7B40A8825BAD3562B3D429ACB5C82D2D5B688AC59C7A34F2A95CB8F749315668EDDC0E1FD5388F8ABC4D4DD6E92A5BBD831639FE592A260E0CBCEFBC20AC99901ACA5C32B677404BCFE0B5D4A483E117182

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CMUSerif-Bold cguidfix
/F2.1/CMUSerif-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 587 220 rc
-1105.0248 1233.0331 m
1645.3884 1233.0331 l
1645.3884 -1257.876 l
-1105.0248 -1257.876 l
h
-1105.0248 1233.0331 m
f
48.5 173 m
78.5 173 l
78.5 143 l
48.5 143 l
h
48.5 173 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -248 457 cm
296.5 284 m
326.5 284 l
326.5 314 l
296.5 314 l
h
296.5 284 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 63.5 158 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.9660001 2.4000168 m
(!)s
/F1.1[ 11 0 0 -11 0 0]sf
1.466 7.4000168 m
(")s
/Cs1 SC
1 1 1 sc
CM
48.5 143 m
78.5 143 l
78.5 113 l
48.5 113 l
h
48.5 143 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -248 457 cm
296.5 314 m
326.5 314 l
326.5 344 l
296.5 344 l
h
296.5 314 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 63.5 128 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.9660001 2.4000168 m
(!)s
/F1.1[ 11 0 0 -11 0 0]sf
1.466 7.4000168 m
(#)s
/Cs1 SC
1 1 1 sc
CM
48.5 113 m
78.5 113 l
78.5 83 l
48.5 83 l
h
48.5 113 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -248 457 cm
296.5 344 m
326.5 344 l
326.5 374 l
296.5 374 l
h
296.5 344 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 63.5 98 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.9660001 2.4000168 m
(!)s
/F1.1[ 11 0 0 -11 0 0]sf
1.466 7.4000168 m
($)s
/Cs1 SC
1 1 1 sc
CM
48.5 83 m
78.5 83 l
78.5 53 l
48.5 53 l
h
48.5 83 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -248 457 cm
296.5 374 m
326.5 374 l
326.5 404 l
296.5 404 l
h
296.5 374 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 63.5 68 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.9660001 2.4000168 m
(!)s
/F1.1[ 11 0 0 -11 0 0]sf
1.466 7.4000168 m
(%)s
/Cs1 SC
1 1 1 sc
CM
48.5 53 m
78.5 53 l
78.5 23 l
48.5 23 l
h
48.5 53 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -248 457 cm
296.5 404 m
326.5 404 l
326.5 434 l
296.5 434 l
h
296.5 404 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 63.5 38 cm
/F1.1[ 16 0 0 -16 0 0]sf
-6.9660001 2.4000168 m
(!)s
/F1.1[ 11 0 0 -11 0 0]sf
1.466 7.4000168 m
(&)s
/Cs1 SC
1 1 1 sc
CM
334 128 m
364 128 l
364 98 l
334 98 l
h
334 128 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -248 457 cm
582 329 m
612 329 l
612 359 l
582 359 l
h
582 329 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 349 113 cm
/F1.1[ 16 0 0 -16 0 0]sf
-7.1900001 2.4000168 m
(')s
/F1.1[ 11 0 0 -11 0 0]sf
1.6900001 7.4000168 m
(#)s
/Cs1 SC
1 1 1 sc
CM
334 98 m
364 98 l
364 68 l
334 68 l
h
334 98 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -248 457 cm
582 359 m
612 359 l
612 389 l
582 389 l
h
582 359 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 349 83 cm
/F1.1[ 16 0 0 -16 0 0]sf
-7.1900001 2.4000168 m
(')s
/F1.1[ 11 0 0 -11 0 0]sf
1.6900001 7.4000168 m
($)s
1 0 0 -1 63.5 203 cm
/F2.1[ 16 0 0 -16 0 0]sf
-58.304001 3.4000244 m
(!"#$%&"'\("\)$*&)[ 10.032000 8.432000 8.944000 7.152000 10.208000 7.568000 8.432000 6.128000 9.184000 8.432000 8.176000 7.152000 9.200000 0.000000 ] xS
1 0 0 -1 349 203 cm
-69.056 3.4000244 m
(+&",-\)$",'*%$.%$)[ 12.576000 7.568000 8.432000 10.208000 5.104000 8.176000 7.152000 8.432000 10.208000 6.128000 9.200000 10.208000 7.152000 10.208000 10.208000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -248 457 cm
386.0625 359 m
512.53748 359 l
S
0 i
CM
272.53751 98 m
264.53751 101 l
264.53751 95 l
h
272.53751 98 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -248 457 cm
520.53748 359 m
512.53748 356 l
512.53748 362 l
h
520.53748 359 m
S
/Cs2 SC
0 sc
1 0 0 -1 206.25 128 cm
-75.447998 3.4000244 m
(/"#&0#12"'3%0\)$-*0)[ 11.056000 8.432000 8.944000 7.568000 10.208000 8.944000 10.208000 5.104000 8.432000 6.128000 5.616000 10.208000 10.208000 8.176000 7.152000 5.104000 9.200000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
181.79297 114.5 m
217.79297 114.5 l
217.79297 81.5 l
181.79297 81.5 l
h
181.79297 114.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 199.79297 98 cm
/F1.1[ 16 0 0 -16 0 0]sf
-12.864 3.9000244 m
(\(\)!*)[ 4.880000 6.208000 8.432000 0.000000 ] xS
1 0 0 -1 526.5 203 cm
/F2.1[ 16 0 0 -16 0 0]sf
-55.136002 3.4000244 m
(4&*%0,'$&%$5)[ 14.464000 7.568000 9.200000 10.208000 10.208000 10.208000 6.128000 7.152000 7.568000 10.208000 7.152000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
511.5 128 m
541.5 128 l
541.5 98 l
511.5 98 l
h
511.5 128 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -248 457 cm
759.5 329 m
789.5 329 l
789.5 359 l
759.5 359 l
h
759.5 329 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 526.5 113 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.8540001 2.4000168 m
(+)s
/F1.1[ 11 0 0 -11 0 0]sf
0.354 7.4000168 m
(#)s
/Cs1 SC
1 1 1 sc
CM
511.5 98 m
541.5 98 l
541.5 68 l
511.5 68 l
h
511.5 98 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -248 457 cm
759.5 359 m
789.5 359 l
789.5 389 l
759.5 389 l
h
759.5 359 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 526.5 83 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.8540001 2.4000168 m
(+)s
/F1.1[ 11 0 0 -11 0 0]sf
0.354 7.4000168 m
($)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -248 457 cm
632.15002 359 m
739.34998 359 l
S
0 i
CM
499.35001 98 m
491.35001 101 l
491.35001 95 l
h
499.35001 98 m
f
0 J
0 j
1 0 0 -1 -248 457 cm
747.34998 359 m
739.34998 356 l
739.34998 362 l
h
747.34998 359 m
S
CM
376.14999 98 m
384.14999 95 l
384.14999 101 l
h
376.14999 98 m
f
1 0 0 -1 -248 457 cm
624.15002 359 m
632.15002 362 l
632.15002 356 l
h
624.15002 359 m
S
1 1 1 sc
CM
398.3118 114.5 m
472.3118 114.5 l
472.3118 81.5 l
398.3118 81.5 l
h
398.3118 114.5 m
f
/Cs2 SC
0 sc
1 0 0 -1 435.3118 98 cm
/F1.1[ 16 0 0 -16 0 0]sf
-31.559999 3.9000244 m
(,-.'/01)[ 11.552000 8.000000 13.328000 8.880000 8.000000 6.256000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -248 457 cm
680.9057 375.5 m
680.9057 387.39999 l
680.9057 440 l
671.5 440 l
465.79297 440.49216 l
451.4375 440.49216 l
451.4375 387.39999 l
451.4375 385.39999 l
S
0 i
CM
203.43748 79.599998 m
200.43748 71.599998 l
206.43748 71.599998 l
h
203.43748 79.599998 m
f
0 J
0 j
1 0 0 -1 -248 457 cm
451.4375 377.39999 m
448.4375 385.39999 l
454.4375 385.39999 l
h
451.4375 377.39999 m
S
1 1 1 sc
CM
280.60367 33.232281 m
342.60367 33.232281 l
342.60367 0.23227933 l
280.60367 0.23227933 l
h
280.60367 33.232281 m
f
/Cs2 SC
0 sc
1 0 0 -1 311.60367 16.732279 cm
-25.76 3.9000244 m
(2'3/+1)[ 12.000000 9.328000 8.880000 8.000000 6.208000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
